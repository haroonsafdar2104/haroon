{"ast":null,"code":"import _classCallCheck from \"D:/Web Data/Personal-Website/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Web Data/Personal-Website/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Web Data/Personal-Website/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Web Data/Personal-Website/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\n\nvar PopChildMeasure = /*#__PURE__*/function (_React$Component) {\n  _inherits(PopChildMeasure, _React$Component);\n\n  var _super = _createSuper(PopChildMeasure);\n\n  function PopChildMeasure() {\n    _classCallCheck(this, PopChildMeasure);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PopChildMeasure, [{\n    key: \"getSnapshotBeforeUpdate\",\n    value: function getSnapshotBeforeUpdate(prevProps) {\n      var element = this.props.childRef.current;\n\n      if (element && prevProps.isPresent && !this.props.isPresent) {\n        var size = this.props.sizeRef.current;\n        size.height = element.offsetHeight || 0;\n        size.width = element.offsetWidth || 0;\n        size.top = element.offsetTop;\n        size.left = element.offsetLeft;\n      }\n\n      return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return PopChildMeasure;\n}(React.Component);\n\nfunction PopChild(_ref) {\n  var children = _ref.children,\n      isPresent = _ref.isPresent;\n  var id = useId();\n  var ref = useRef(null);\n  var size = useRef({\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0\n  });\n  /**\n   * We create and inject a style block so we can apply this explicit\n   * sizing in a non-destructive manner by just deleting the style block.\n   *\n   * We can't apply size via render as the measurement happens\n   * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n   * styles directly on the DOM node, we might be overwriting\n   * styles set via the style prop.\n   */\n\n  useInsertionEffect(function () {\n    var _size$current = size.current,\n        width = _size$current.width,\n        height = _size$current.height,\n        top = _size$current.top,\n        left = _size$current.left;\n    if (isPresent || !ref.current || !width || !height) return;\n    ref.current.dataset.motionPopId = id;\n    var style = document.createElement(\"style\");\n    document.head.appendChild(style);\n\n    if (style.sheet) {\n      style.sheet.insertRule(\"\\n          [data-motion-pop-id=\\\"\".concat(id, \"\\\"] {\\n            position: absolute !important;\\n            width: \").concat(width, \"px !important;\\n            height: \").concat(height, \"px !important;\\n            top: \").concat(top, \"px !important;\\n            left: \").concat(left, \"px !important;\\n          }\\n        \"));\n    }\n\n    return function () {\n      document.head.removeChild(style);\n    };\n  }, [isPresent]);\n  return React.createElement(PopChildMeasure, {\n    isPresent: isPresent,\n    childRef: ref,\n    sizeRef: size\n  }, React.cloneElement(children, {\n    ref: ref\n  }));\n}\n\nexport { PopChild };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs"],"names":["React","useId","useRef","useInsertionEffect","PopChildMeasure","prevProps","element","props","childRef","current","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","Component","PopChild","id","ref","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","cloneElement"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n"]},"metadata":{},"sourceType":"module"}