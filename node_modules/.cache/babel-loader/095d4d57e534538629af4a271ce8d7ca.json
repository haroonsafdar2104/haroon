{"ast":null,"code":"import { dispatchPointerEvent } from '../utils/events.es.js';\nconst press = {\n  isActive: options => Boolean(options.press),\n  subscribe: (element, _ref) => {\n    let {\n      enable,\n      disable\n    } = _ref;\n\n    const onPointerUp = event => {\n      disable();\n      dispatchPointerEvent(element, \"pressend\", event);\n      window.removeEventListener(\"pointerup\", onPointerUp);\n    };\n\n    const onPointerDown = event => {\n      enable();\n      dispatchPointerEvent(element, \"pressstart\", event);\n      window.addEventListener(\"pointerup\", onPointerUp);\n    };\n\n    element.addEventListener(\"pointerdown\", onPointerDown);\n    return () => {\n      element.removeEventListener(\"pointerdown\", onPointerDown);\n      window.removeEventListener(\"pointerup\", onPointerUp);\n    };\n  }\n};\nexport { press };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/@motionone/dom/dist/state/gestures/press.es.js"],"names":["dispatchPointerEvent","press","isActive","options","Boolean","subscribe","element","enable","disable","onPointerUp","event","window","removeEventListener","onPointerDown","addEventListener"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,uBAArC;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAGC,OAAD,IAAaC,OAAO,CAACD,OAAO,CAACF,KAAT,CADpB;AAEVI,EAAAA,SAAS,EAAE,CAACC,OAAD,WAAkC;AAAA,QAAxB;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAwB;;AACzC,UAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3BF,MAAAA,OAAO;AACPR,MAAAA,oBAAoB,CAACM,OAAD,EAAU,UAAV,EAAsBI,KAAtB,CAApB;AACAC,MAAAA,MAAM,CAACC,mBAAP,CAA2B,WAA3B,EAAwCH,WAAxC;AACH,KAJD;;AAKA,UAAMI,aAAa,GAAIH,KAAD,IAAW;AAC7BH,MAAAA,MAAM;AACNP,MAAAA,oBAAoB,CAACM,OAAD,EAAU,YAAV,EAAwBI,KAAxB,CAApB;AACAC,MAAAA,MAAM,CAACG,gBAAP,CAAwB,WAAxB,EAAqCL,WAArC;AACH,KAJD;;AAKAH,IAAAA,OAAO,CAACQ,gBAAR,CAAyB,aAAzB,EAAwCD,aAAxC;AACA,WAAO,MAAM;AACTP,MAAAA,OAAO,CAACM,mBAAR,CAA4B,aAA5B,EAA2CC,aAA3C;AACAF,MAAAA,MAAM,CAACC,mBAAP,CAA2B,WAA3B,EAAwCH,WAAxC;AACH,KAHD;AAIH;AAlBS,CAAd;AAqBA,SAASR,KAAT","sourcesContent":["import { dispatchPointerEvent } from '../utils/events.es.js';\n\nconst press = {\n    isActive: (options) => Boolean(options.press),\n    subscribe: (element, { enable, disable }) => {\n        const onPointerUp = (event) => {\n            disable();\n            dispatchPointerEvent(element, \"pressend\", event);\n            window.removeEventListener(\"pointerup\", onPointerUp);\n        };\n        const onPointerDown = (event) => {\n            enable();\n            dispatchPointerEvent(element, \"pressstart\", event);\n            window.addEventListener(\"pointerup\", onPointerUp);\n        };\n        element.addEventListener(\"pointerdown\", onPointerDown);\n        return () => {\n            element.removeEventListener(\"pointerdown\", onPointerDown);\n            window.removeEventListener(\"pointerup\", onPointerUp);\n        };\n    },\n};\n\nexport { press };\n"]},"metadata":{},"sourceType":"module"}