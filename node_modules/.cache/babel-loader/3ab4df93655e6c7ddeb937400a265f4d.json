{"ast":null,"code":"import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender() {\n  let forwardMotionProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  const useRender = (Component, props, projectionId, ref, _ref, isStatic) => {\n    let {\n      latestValues\n    } = _ref;\n    const useVisualProps = isSVGComponent(Component) ? useSVGProps : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = { ...filteredProps,\n      ...visualProps,\n      ref\n    };\n\n    if (projectionId) {\n      elementProps[\"data-projection-id\"] = projectionId;\n    }\n\n    return createElement(Component, elementProps);\n  };\n\n  return useRender;\n}\n\nexport { createUseRender };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/framer-motion/dist/es/render/dom/use-render.mjs"],"names":["createElement","useHTMLProps","filterProps","isSVGComponent","useSVGProps","createUseRender","forwardMotionProps","useRender","Component","props","projectionId","ref","isStatic","latestValues","useVisualProps","visualProps","filteredProps","elementProps"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,SAASC,eAAT,GAAqD;AAAA,MAA5BC,kBAA4B,uEAAP,KAAO;;AACjD,QAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,YAAnB,EAAiCC,GAAjC,QAAwDC,QAAxD,KAAqE;AAAA,QAA/B;AAAEC,MAAAA;AAAF,KAA+B;AACnF,UAAMC,cAAc,GAAGX,cAAc,CAACK,SAAD,CAAd,GACjBJ,WADiB,GAEjBH,YAFN;AAGA,UAAMc,WAAW,GAAGD,cAAc,CAACL,KAAD,EAAQI,YAAR,EAAsBD,QAAtB,CAAlC;AACA,UAAMI,aAAa,GAAGd,WAAW,CAACO,KAAD,EAAQ,OAAOD,SAAP,KAAqB,QAA7B,EAAuCF,kBAAvC,CAAjC;AACA,UAAMW,YAAY,GAAG,EACjB,GAAGD,aADc;AAEjB,SAAGD,WAFc;AAGjBJ,MAAAA;AAHiB,KAArB;;AAKA,QAAID,YAAJ,EAAkB;AACdO,MAAAA,YAAY,CAAC,oBAAD,CAAZ,GAAqCP,YAArC;AACH;;AACD,WAAOV,aAAa,CAACQ,SAAD,EAAYS,YAAZ,CAApB;AACH,GAfD;;AAgBA,SAAOV,SAAP;AACH;;AAED,SAASF,eAAT","sourcesContent":["import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n"]},"metadata":{},"sourceType":"module"}