{"ast":null,"code":"import { paramsList } from './params-list.js';\nimport { isObject } from './utils.js';\n\nfunction getChangedParams(swiperParams, oldParams, children, oldChildren, getKey) {\n  const keys = [];\n  if (!oldParams) return keys;\n\n  const addKey = key => {\n    if (keys.indexOf(key) < 0) keys.push(key);\n  };\n\n  if (children && oldChildren) {\n    const oldChildrenKeys = oldChildren.map(getKey);\n    const childrenKeys = children.map(getKey);\n    if (oldChildrenKeys.join('') !== childrenKeys.join('')) addKey('children');\n    if (oldChildren.length !== children.length) addKey('children');\n  }\n\n  const watchParams = paramsList.filter(key => key[0] === '_').map(key => key.replace(/_/, ''));\n  watchParams.forEach(key => {\n    if (key in swiperParams && key in oldParams) {\n      if (isObject(swiperParams[key]) && isObject(oldParams[key])) {\n        const newKeys = Object.keys(swiperParams[key]);\n        const oldKeys = Object.keys(oldParams[key]);\n\n        if (newKeys.length !== oldKeys.length) {\n          addKey(key);\n        } else {\n          newKeys.forEach(newKey => {\n            if (swiperParams[key][newKey] !== oldParams[key][newKey]) {\n              addKey(key);\n            }\n          });\n          oldKeys.forEach(oldKey => {\n            if (swiperParams[key][oldKey] !== oldParams[key][oldKey]) addKey(key);\n          });\n        }\n      } else if (swiperParams[key] !== oldParams[key]) {\n        addKey(key);\n      }\n    }\n  });\n  return keys;\n}\n\nexport { getChangedParams };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/swiper/components-shared/get-changed-params.js"],"names":["paramsList","isObject","getChangedParams","swiperParams","oldParams","children","oldChildren","getKey","keys","addKey","key","indexOf","push","oldChildrenKeys","map","childrenKeys","join","length","watchParams","filter","replace","forEach","newKeys","Object","oldKeys","newKey","oldKey"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwCC,SAAxC,EAAmDC,QAAnD,EAA6DC,WAA7D,EAA0EC,MAA1E,EAAkF;AAChF,QAAMC,IAAI,GAAG,EAAb;AACA,MAAI,CAACJ,SAAL,EAAgB,OAAOI,IAAP;;AAEhB,QAAMC,MAAM,GAAGC,GAAG,IAAI;AACpB,QAAIF,IAAI,CAACG,OAAL,CAAaD,GAAb,IAAoB,CAAxB,EAA2BF,IAAI,CAACI,IAAL,CAAUF,GAAV;AAC5B,GAFD;;AAIA,MAAIL,QAAQ,IAAIC,WAAhB,EAA6B;AAC3B,UAAMO,eAAe,GAAGP,WAAW,CAACQ,GAAZ,CAAgBP,MAAhB,CAAxB;AACA,UAAMQ,YAAY,GAAGV,QAAQ,CAACS,GAAT,CAAaP,MAAb,CAArB;AACA,QAAIM,eAAe,CAACG,IAAhB,CAAqB,EAArB,MAA6BD,YAAY,CAACC,IAAb,CAAkB,EAAlB,CAAjC,EAAwDP,MAAM,CAAC,UAAD,CAAN;AACxD,QAAIH,WAAW,CAACW,MAAZ,KAAuBZ,QAAQ,CAACY,MAApC,EAA4CR,MAAM,CAAC,UAAD,CAAN;AAC7C;;AAED,QAAMS,WAAW,GAAGlB,UAAU,CAACmB,MAAX,CAAkBT,GAAG,IAAIA,GAAG,CAAC,CAAD,CAAH,KAAW,GAApC,EAAyCI,GAAzC,CAA6CJ,GAAG,IAAIA,GAAG,CAACU,OAAJ,CAAY,GAAZ,EAAiB,EAAjB,CAApD,CAApB;AACAF,EAAAA,WAAW,CAACG,OAAZ,CAAoBX,GAAG,IAAI;AACzB,QAAIA,GAAG,IAAIP,YAAP,IAAuBO,GAAG,IAAIN,SAAlC,EAA6C;AAC3C,UAAIH,QAAQ,CAACE,YAAY,CAACO,GAAD,CAAb,CAAR,IAA+BT,QAAQ,CAACG,SAAS,CAACM,GAAD,CAAV,CAA3C,EAA6D;AAC3D,cAAMY,OAAO,GAAGC,MAAM,CAACf,IAAP,CAAYL,YAAY,CAACO,GAAD,CAAxB,CAAhB;AACA,cAAMc,OAAO,GAAGD,MAAM,CAACf,IAAP,CAAYJ,SAAS,CAACM,GAAD,CAArB,CAAhB;;AAEA,YAAIY,OAAO,CAACL,MAAR,KAAmBO,OAAO,CAACP,MAA/B,EAAuC;AACrCR,UAAAA,MAAM,CAACC,GAAD,CAAN;AACD,SAFD,MAEO;AACLY,UAAAA,OAAO,CAACD,OAAR,CAAgBI,MAAM,IAAI;AACxB,gBAAItB,YAAY,CAACO,GAAD,CAAZ,CAAkBe,MAAlB,MAA8BrB,SAAS,CAACM,GAAD,CAAT,CAAee,MAAf,CAAlC,EAA0D;AACxDhB,cAAAA,MAAM,CAACC,GAAD,CAAN;AACD;AACF,WAJD;AAKAc,UAAAA,OAAO,CAACH,OAAR,CAAgBK,MAAM,IAAI;AACxB,gBAAIvB,YAAY,CAACO,GAAD,CAAZ,CAAkBgB,MAAlB,MAA8BtB,SAAS,CAACM,GAAD,CAAT,CAAegB,MAAf,CAAlC,EAA0DjB,MAAM,CAACC,GAAD,CAAN;AAC3D,WAFD;AAGD;AACF,OAhBD,MAgBO,IAAIP,YAAY,CAACO,GAAD,CAAZ,KAAsBN,SAAS,CAACM,GAAD,CAAnC,EAA0C;AAC/CD,QAAAA,MAAM,CAACC,GAAD,CAAN;AACD;AACF;AACF,GAtBD;AAuBA,SAAOF,IAAP;AACD;;AAED,SAASN,gBAAT","sourcesContent":["import { paramsList } from './params-list.js';\nimport { isObject } from './utils.js';\n\nfunction getChangedParams(swiperParams, oldParams, children, oldChildren, getKey) {\n  const keys = [];\n  if (!oldParams) return keys;\n\n  const addKey = key => {\n    if (keys.indexOf(key) < 0) keys.push(key);\n  };\n\n  if (children && oldChildren) {\n    const oldChildrenKeys = oldChildren.map(getKey);\n    const childrenKeys = children.map(getKey);\n    if (oldChildrenKeys.join('') !== childrenKeys.join('')) addKey('children');\n    if (oldChildren.length !== children.length) addKey('children');\n  }\n\n  const watchParams = paramsList.filter(key => key[0] === '_').map(key => key.replace(/_/, ''));\n  watchParams.forEach(key => {\n    if (key in swiperParams && key in oldParams) {\n      if (isObject(swiperParams[key]) && isObject(oldParams[key])) {\n        const newKeys = Object.keys(swiperParams[key]);\n        const oldKeys = Object.keys(oldParams[key]);\n\n        if (newKeys.length !== oldKeys.length) {\n          addKey(key);\n        } else {\n          newKeys.forEach(newKey => {\n            if (swiperParams[key][newKey] !== oldParams[key][newKey]) {\n              addKey(key);\n            }\n          });\n          oldKeys.forEach(oldKey => {\n            if (swiperParams[key][oldKey] !== oldParams[key][oldKey]) addKey(key);\n          });\n        }\n      } else if (swiperParams[key] !== oldParams[key]) {\n        addKey(key);\n      }\n    }\n  });\n  return keys;\n}\n\nexport { getChangedParams };"]},"metadata":{},"sourceType":"module"}