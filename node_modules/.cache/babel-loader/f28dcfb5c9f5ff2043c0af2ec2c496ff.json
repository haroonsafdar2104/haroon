{"ast":null,"code":"import $ from '../../shared/dom.js';\nexport default function updateSlidesProgress(translate) {\n  if (translate === void 0) {\n    translate = this && this.translate || 0;\n  }\n\n  var swiper = this;\n  var params = swiper.params;\n  var slides = swiper.slides,\n      rtl = swiper.rtlTranslate,\n      snapGrid = swiper.snapGrid;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  var offsetCenter = -translate;\n  if (rtl) offsetCenter = translate; // Visible Slides\n\n  slides.removeClass(params.slideVisibleClass);\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (var i = 0; i < slides.length; i += 1) {\n    var slide = slides[i];\n    var slideOffset = slide.swiperSlideOffset;\n\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n\n    var slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    var originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    var slideBefore = -(offsetCenter - slideOffset);\n    var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    var isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides.eq(i).addClass(params.slideVisibleClass);\n    }\n\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/swiper/core/update/updateSlidesProgress.js"],"names":["$","updateSlidesProgress","translate","swiper","params","slides","rtl","rtlTranslate","snapGrid","length","swiperSlideOffset","updateSlidesOffset","offsetCenter","removeClass","slideVisibleClass","visibleSlidesIndexes","visibleSlides","i","slide","slideOffset","cssMode","centeredSlides","slideProgress","minTranslate","swiperSlideSize","spaceBetween","originalSlideProgress","slideBefore","slideAfter","slidesSizesGrid","isVisible","size","push","eq","addClass","progress","originalProgress"],"mappings":"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","sourcesContent":["import $ from '../../shared/dom.js';\nexport default function updateSlidesProgress(translate) {\n  if (translate === void 0) {\n    translate = this && this.translate || 0;\n  }\n\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate; // Visible Slides\n\n  slides.removeClass(params.slideVisibleClass);\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides.eq(i).addClass(params.slideVisibleClass);\n    }\n\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}"]},"metadata":{},"sourceType":"module"}