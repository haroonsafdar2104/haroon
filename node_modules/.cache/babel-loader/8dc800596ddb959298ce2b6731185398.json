{"ast":null,"code":"export default function setTranslate(translate, byController) {\n  var swiper = this;\n  var rtl = swiper.rtlTranslate,\n      params = swiper.params,\n      $wrapperEl = swiper.$wrapperEl,\n      wrapperEl = swiper.wrapperEl,\n      progress = swiper.progress;\n  var x = 0;\n  var y = 0;\n  var z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    $wrapperEl.transform(\"translate3d(\".concat(x, \"px, \").concat(y, \"px, \").concat(z, \"px)\"));\n  }\n\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\n\n  var newProgress;\n  var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/swiper/core/translate/setTranslate.js"],"names":["setTranslate","translate","byController","swiper","rtl","rtlTranslate","params","$wrapperEl","wrapperEl","progress","x","y","z","isHorizontal","roundLengths","Math","floor","cssMode","virtualTranslate","transform","previousTranslate","newProgress","translatesDiff","maxTranslate","minTranslate","updateProgress","emit"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,SAAtB,EAAiCC,YAAjC,EAA+C;AAC5D,MAAMC,MAAM,GAAG,IAAf;AACA,MACgBC,GADhB,GAMID,MANJ,CACEE,YADF;AAAA,MAEEC,MAFF,GAMIH,MANJ,CAEEG,MAFF;AAAA,MAGEC,UAHF,GAMIJ,MANJ,CAGEI,UAHF;AAAA,MAIEC,SAJF,GAMIL,MANJ,CAIEK,SAJF;AAAA,MAKEC,QALF,GAMIN,MANJ,CAKEM,QALF;AAOA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAMC,CAAC,GAAG,CAAV;;AAEA,MAAIT,MAAM,CAACU,YAAP,EAAJ,EAA2B;AACzBH,IAAAA,CAAC,GAAGN,GAAG,GAAG,CAACH,SAAJ,GAAgBA,SAAvB;AACD,GAFD,MAEO;AACLU,IAAAA,CAAC,GAAGV,SAAJ;AACD;;AAED,MAAIK,MAAM,CAACQ,YAAX,EAAyB;AACvBJ,IAAAA,CAAC,GAAGK,IAAI,CAACC,KAAL,CAAWN,CAAX,CAAJ;AACAC,IAAAA,CAAC,GAAGI,IAAI,CAACC,KAAL,CAAWL,CAAX,CAAJ;AACD;;AAED,MAAIL,MAAM,CAACW,OAAX,EAAoB;AAClBT,IAAAA,SAAS,CAACL,MAAM,CAACU,YAAP,KAAwB,YAAxB,GAAuC,WAAxC,CAAT,GAAgEV,MAAM,CAACU,YAAP,KAAwB,CAACH,CAAzB,GAA6B,CAACC,CAA9F;AACD,GAFD,MAEO,IAAI,CAACL,MAAM,CAACY,gBAAZ,EAA8B;AACnCX,IAAAA,UAAU,CAACY,SAAX,uBAAoCT,CAApC,iBAA4CC,CAA5C,iBAAoDC,CAApD;AACD;;AAEDT,EAAAA,MAAM,CAACiB,iBAAP,GAA2BjB,MAAM,CAACF,SAAlC;AACAE,EAAAA,MAAM,CAACF,SAAP,GAAmBE,MAAM,CAACU,YAAP,KAAwBH,CAAxB,GAA4BC,CAA/C,CA/B4D,CA+BV;;AAElD,MAAIU,WAAJ;AACA,MAAMC,cAAc,GAAGnB,MAAM,CAACoB,YAAP,KAAwBpB,MAAM,CAACqB,YAAP,EAA/C;;AAEA,MAAIF,cAAc,KAAK,CAAvB,EAA0B;AACxBD,IAAAA,WAAW,GAAG,CAAd;AACD,GAFD,MAEO;AACLA,IAAAA,WAAW,GAAG,CAACpB,SAAS,GAAGE,MAAM,CAACqB,YAAP,EAAb,IAAsCF,cAApD;AACD;;AAED,MAAID,WAAW,KAAKZ,QAApB,EAA8B;AAC5BN,IAAAA,MAAM,CAACsB,cAAP,CAAsBxB,SAAtB;AACD;;AAEDE,EAAAA,MAAM,CAACuB,IAAP,CAAY,cAAZ,EAA4BvB,MAAM,CAACF,SAAnC,EAA8CC,YAA9C;AACD","sourcesContent":["export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    $wrapperEl,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n  }\n\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\n\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}"]},"metadata":{},"sourceType":"module"}