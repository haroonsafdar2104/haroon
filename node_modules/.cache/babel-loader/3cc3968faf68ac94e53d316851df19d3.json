{"ast":null,"code":"import { mix, getEasingForSegment, removeItem } from '@motionone/utils';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n  for (var i = 0; i < sequence.length; i++) {\n    var keyframe = sequence[i];\n\n    if (keyframe.at > startTime && keyframe.at < endTime) {\n      removeItem(sequence, keyframe); // If we remove this item we have to push the pointer back one\n\n      i--;\n    }\n  }\n}\n\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n  /**\n   * Erase every existing value between currentTime and targetTime,\n   * this will essentially splice this timeline into any currently\n   * defined ones.\n   */\n  eraseKeyframes(sequence, startTime, endTime);\n\n  for (var i = 0; i < keyframes.length; i++) {\n    sequence.push({\n      value: keyframes[i],\n      at: mix(startTime, endTime, offset[i]),\n      easing: getEasingForSegment(easing, i)\n    });\n  }\n}\n\nexport { addKeyframes, eraseKeyframes };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/@motionone/dom/dist/timeline/utils/edit.es.js"],"names":["mix","getEasingForSegment","removeItem","eraseKeyframes","sequence","startTime","endTime","i","length","keyframe","at","addKeyframes","keyframes","easing","offset","push","value"],"mappings":"AAAA,SAASA,GAAT,EAAcC,mBAAd,EAAmCC,UAAnC,QAAqD,kBAArD;;AAEA,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,OAA7C,EAAsD;AAClD,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,QAAME,QAAQ,GAAGL,QAAQ,CAACG,CAAD,CAAzB;;AACA,QAAIE,QAAQ,CAACC,EAAT,GAAcL,SAAd,IAA2BI,QAAQ,CAACC,EAAT,GAAcJ,OAA7C,EAAsD;AAClDJ,MAAAA,UAAU,CAACE,QAAD,EAAWK,QAAX,CAAV,CADkD,CAElD;;AACAF,MAAAA,CAAC;AACJ;AACJ;AACJ;;AACD,SAASI,YAAT,CAAsBP,QAAtB,EAAgCQ,SAAhC,EAA2CC,MAA3C,EAAmDC,MAAnD,EAA2DT,SAA3D,EAAsEC,OAAtE,EAA+E;AAC3E;AACJ;AACA;AACA;AACA;AACIH,EAAAA,cAAc,CAACC,QAAD,EAAWC,SAAX,EAAsBC,OAAtB,CAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,SAAS,CAACJ,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvCH,IAAAA,QAAQ,CAACW,IAAT,CAAc;AACVC,MAAAA,KAAK,EAAEJ,SAAS,CAACL,CAAD,CADN;AAEVG,MAAAA,EAAE,EAAEV,GAAG,CAACK,SAAD,EAAYC,OAAZ,EAAqBQ,MAAM,CAACP,CAAD,CAA3B,CAFG;AAGVM,MAAAA,MAAM,EAAEZ,mBAAmB,CAACY,MAAD,EAASN,CAAT;AAHjB,KAAd;AAKH;AACJ;;AAED,SAASI,YAAT,EAAuBR,cAAvB","sourcesContent":["import { mix, getEasingForSegment, removeItem } from '@motionone/utils';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mix(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n"]},"metadata":{},"sourceType":"module"}