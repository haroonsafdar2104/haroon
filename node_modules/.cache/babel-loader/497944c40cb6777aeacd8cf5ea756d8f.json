{"ast":null,"code":"import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\nconst rootProjectionNode = {\n  current: undefined\n};\nconst HTMLProjectionNode = createProjectionNode({\n  measureScroll: instance => ({\n    x: instance.scrollLeft,\n    y: instance.scrollTop\n  }),\n  defaultParent: () => {\n    if (!rootProjectionNode.current) {\n      const documentNode = new DocumentProjectionNode(0, {});\n      documentNode.mount(window);\n      documentNode.setOptions({\n        layoutScroll: true\n      });\n      rootProjectionNode.current = documentNode;\n    }\n\n    return rootProjectionNode.current;\n  },\n  resetTransform: (instance, value) => {\n    instance.style.transform = value !== undefined ? value : \"none\";\n  },\n  checkIsScrollRoot: instance => Boolean(window.getComputedStyle(instance).position === \"fixed\")\n});\nexport { HTMLProjectionNode, rootProjectionNode };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs"],"names":["createProjectionNode","DocumentProjectionNode","rootProjectionNode","current","undefined","HTMLProjectionNode","measureScroll","instance","x","scrollLeft","y","scrollTop","defaultParent","documentNode","mount","window","setOptions","layoutScroll","resetTransform","value","style","transform","checkIsScrollRoot","Boolean","getComputedStyle","position"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,8BAArC;AACA,SAASC,sBAAT,QAAuC,8BAAvC;AAEA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,OAAO,EAAEC;AADc,CAA3B;AAGA,MAAMC,kBAAkB,GAAGL,oBAAoB,CAAC;AAC5CM,EAAAA,aAAa,EAAGC,QAAD,KAAe;AAC1BC,IAAAA,CAAC,EAAED,QAAQ,CAACE,UADc;AAE1BC,IAAAA,CAAC,EAAEH,QAAQ,CAACI;AAFc,GAAf,CAD6B;AAK5CC,EAAAA,aAAa,EAAE,MAAM;AACjB,QAAI,CAACV,kBAAkB,CAACC,OAAxB,EAAiC;AAC7B,YAAMU,YAAY,GAAG,IAAIZ,sBAAJ,CAA2B,CAA3B,EAA8B,EAA9B,CAArB;AACAY,MAAAA,YAAY,CAACC,KAAb,CAAmBC,MAAnB;AACAF,MAAAA,YAAY,CAACG,UAAb,CAAwB;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAxB;AACAf,MAAAA,kBAAkB,CAACC,OAAnB,GAA6BU,YAA7B;AACH;;AACD,WAAOX,kBAAkB,CAACC,OAA1B;AACH,GAb2C;AAc5Ce,EAAAA,cAAc,EAAE,CAACX,QAAD,EAAWY,KAAX,KAAqB;AACjCZ,IAAAA,QAAQ,CAACa,KAAT,CAAeC,SAAf,GAA2BF,KAAK,KAAKf,SAAV,GAAsBe,KAAtB,GAA8B,MAAzD;AACH,GAhB2C;AAiB5CG,EAAAA,iBAAiB,EAAGf,QAAD,IAAcgB,OAAO,CAACR,MAAM,CAACS,gBAAP,CAAwBjB,QAAxB,EAAkCkB,QAAlC,KAA+C,OAAhD;AAjBI,CAAD,CAA/C;AAoBA,SAASpB,kBAAT,EAA6BH,kBAA7B","sourcesContent":["import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n"]},"metadata":{},"sourceType":"module"}