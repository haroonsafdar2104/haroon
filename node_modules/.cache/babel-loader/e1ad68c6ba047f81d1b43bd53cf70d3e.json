{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\portpoliopro-main\\\\client\\\\src\\\\PortfolioContainer\\\\Home\\\\Header\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from '../../../utilities/commonUtils';\nimport ScrollService from '../../../utilities/ScrollService';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Header.css';\nimport index from 'react-typical';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n\n  let currenScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClasses(i),\n      onClick: () => switchScreen(i, screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this));\n  };\n\n  const getHeaderOptionsClasses = index => {\n    let classes = \"header-option \";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator \";\n    if (selectedScreen === index) classes += \"selected-header-option \";\n    return classes;\n  };\n\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return screenComponent;\n    screenComponent.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\",\n    onClick: () => setShowHeaderOptions(!showHeaderOptions),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-hamburger\",\n        onClick: () => setShowHeaderOptions(!showHeaderOptions),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"header-hamburger-bars\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"R2~\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: showHeaderOptions ? \"header-options show-hamburger-options\" : \"header-options\",\n        children: getHeaderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Header, \"q2MbXurkb4Gbb5Hih7vqcPgrBdM=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/portpoliopro-main/client/src/PortfolioContainer/Home/Header/Header.js"],"names":["React","useState","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","index","Header","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currenScreenSubscription","currentScreenBroadCaster","subscribe","getHeaderOptions","map","screen","i","getHeaderOptionsClasses","switchScreen","screen_name","classes","length","screenComponent","document","getElementById","scrollIntoView","behavior"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX, } from '../../../utilities/commonUtils';\nimport ScrollService from '../../../utilities/ScrollService';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Header.css';\nimport index from 'react-typical';\n\nexport default function Header(){\n    const [selectedScreen, setSelectedScreen] = useState(0);\n    const[showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n    const updateCurrentScreen = (currentScreen)=>{\n      if(!currentScreen || !currentScreen.screenInView)\n      return;\n      let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView)\n      if(screenIndex < 0)\n      return;\n    }\n    let currenScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen)\n\n    const getHeaderOptions = ()=>{\n      return(\n        TOTAL_SCREENS.map((screen, i)=> (\n        <div key={screen.screen_name} className={getHeaderOptionsClasses(i)}\n        onClick= {() => switchScreen(i, screen)}>\n          <span>{screen.screen_name}</span>\n        </div>\n        )));\n      \n    };\n    const getHeaderOptionsClasses = (index) => {\n      let classes = \"header-option \";\n      if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator \";\n  \n      if (selectedScreen === index) classes += \"selected-header-option \";\n  \n      return classes;\n    };\n  const switchScreen = (index, screen)=>{\n    let screenComponent = document.getElementById(screen.screen_name);\n    if(!screenComponent)\n    return screenComponent;\n\n    screenComponent.scrollIntoView({behavior: \"smooth\"});\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n\nreturn(\n  <div\n  className=\"header-container\"\n  onClick={() => setShowHeaderOptions(!showHeaderOptions)}\n>\n  <div className=\"header-parent\">\n    <div\n      className=\"header-hamburger\"\n      onClick={() => setShowHeaderOptions(!showHeaderOptions)}\n    >\n      <FontAwesomeIcon className=\"header-hamburger-bars\" icon={faBars} />\n    </div>\n    <div className=\"header-logo\">\n      <span>R2~</span>\n    </div>\n    <div\n      className={\n        showHeaderOptions\n          ? \"header-options show-hamburger-options\"\n          : \"header-options\"\n      }\n    >\n      {getHeaderOptions()}\n    </div>\n  </div>\n</div>\n);\n}"]},"metadata":{},"sourceType":"module"}