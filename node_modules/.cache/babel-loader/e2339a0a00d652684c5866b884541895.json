{"ast":null,"code":"var isArray = Array.isArray;\nexport function argsOrArgArray(args) {\n  return args.length === 1 && isArray(args[0]) ? args[0] : args;\n}","map":{"version":3,"mappings":"AAAQ,WAAO,GAAKA,KAAK,QAAjB;AAMR,OAAM,SAAUC,cAAV,CAA4BC,IAA5B,EAA6C;AACjD,SAAOA,IAAI,CAACC,MAAL,KAAgB,CAAhB,IAAqBC,OAAO,CAACF,IAAI,CAAC,CAAD,CAAL,CAA5B,GAAwCA,IAAI,CAAC,CAAD,CAA5C,GAAmDA,IAA1D;AACD","names":["Array","argsOrArgArray","args","length","isArray"],"sources":["D:\\Web Data\\Personal-Website\\client\\node_modules\\rxjs\\src\\internal\\util\\argsOrArgArray.ts"],"sourcesContent":["const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n"]},"metadata":{},"sourceType":"module"}