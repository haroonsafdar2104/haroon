{"ast":null,"code":"import _objectSpread from \"D:/Web Data/Personal-Website/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"D:/Web Data/Personal-Website/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Web Data/Personal-Website/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { distance, pipe } from 'popmotion';\n/**\n * @internal\n */\n\nvar PanSession = /*#__PURE__*/function () {\n  function PanSession(event, handlers) {\n    var _this = this;\n\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        transformPagePoint = _ref.transformPagePoint;\n\n    _classCallCheck(this, PanSession);\n\n    /**\n     * @internal\n     */\n    this.startEvent = null;\n    /**\n     * @internal\n     */\n\n    this.lastMoveEvent = null;\n    /**\n     * @internal\n     */\n\n    this.lastMoveEventInfo = null;\n    /**\n     * @internal\n     */\n\n    this.handlers = {};\n\n    this.updatePoint = function () {\n      if (!(_this.lastMoveEvent && _this.lastMoveEventInfo)) return;\n      var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\n      var isPanStarted = _this.startEvent !== null; // Only start panning if the offset is larger than 3 pixels. If we make it\n      // any larger than this we'll want to reset the pointer history\n      // on the first update to avoid visual snapping to the cursoe.\n\n      var isDistancePastThreshold = distance(info.offset, {\n        x: 0,\n        y: 0\n      }) >= 3;\n      if (!isPanStarted && !isDistancePastThreshold) return;\n      var point = info.point;\n\n      var _getFrameData = getFrameData(),\n          timestamp = _getFrameData.timestamp;\n\n      _this.history.push(_objectSpread(_objectSpread({}, point), {}, {\n        timestamp: timestamp\n      }));\n\n      var _this$handlers = _this.handlers,\n          onStart = _this$handlers.onStart,\n          onMove = _this$handlers.onMove;\n\n      if (!isPanStarted) {\n        onStart && onStart(_this.lastMoveEvent, info);\n        _this.startEvent = _this.lastMoveEvent;\n      }\n\n      onMove && onMove(_this.lastMoveEvent, info);\n    };\n\n    this.handlePointerMove = function (event, info) {\n      _this.lastMoveEvent = event;\n      _this.lastMoveEventInfo = transformPoint(info, _this.transformPagePoint); // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n\n      if (isMouseEvent(event) && event.buttons === 0) {\n        _this.handlePointerUp(event, info);\n\n        return;\n      } // Throttle mouse move event to once per frame\n\n\n      sync.update(_this.updatePoint, true);\n    };\n\n    this.handlePointerUp = function (event, info) {\n      _this.end();\n\n      var _this$handlers2 = _this.handlers,\n          onEnd = _this$handlers2.onEnd,\n          onSessionEnd = _this$handlers2.onSessionEnd;\n      var panInfo = getPanInfo(transformPoint(info, _this.transformPagePoint), _this.history);\n\n      if (_this.startEvent && onEnd) {\n        onEnd(event, panInfo);\n      }\n\n      onSessionEnd && onSessionEnd(event, panInfo);\n    }; // If we have more than one touch, don't start detecting this gesture\n\n\n    if (isTouchEvent(event) && event.touches.length > 1) return;\n    this.handlers = handlers;\n    this.transformPagePoint = transformPagePoint;\n    var info = extractEventInfo(event);\n    var initialInfo = transformPoint(info, this.transformPagePoint);\n    var point = initialInfo.point;\n\n    var _getFrameData2 = getFrameData(),\n        timestamp = _getFrameData2.timestamp;\n\n    this.history = [_objectSpread(_objectSpread({}, point), {}, {\n      timestamp: timestamp\n    })];\n    var onSessionStart = handlers.onSessionStart;\n    onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));\n    this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n  }\n\n  _createClass(PanSession, [{\n    key: \"updateHandlers\",\n    value: function updateHandlers(handlers) {\n      this.handlers = handlers;\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      this.removeListeners && this.removeListeners();\n      cancelSync.update(this.updatePoint);\n    }\n  }]);\n\n  return PanSession;\n}();\n\nfunction transformPoint(info, transformPagePoint) {\n  return transformPagePoint ? {\n    point: transformPagePoint(info.point)\n  } : info;\n}\n\nfunction subtractPoint(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\n\nfunction getPanInfo(_ref2, history) {\n  var point = _ref2.point;\n  return {\n    point: point,\n    delta: subtractPoint(point, lastDevicePoint(history)),\n    offset: subtractPoint(point, startDevicePoint(history)),\n    velocity: getVelocity(history, 0.1)\n  };\n}\n\nfunction startDevicePoint(history) {\n  return history[0];\n}\n\nfunction lastDevicePoint(history) {\n  return history[history.length - 1];\n}\n\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var i = history.length - 1;\n  var timestampedPoint = null;\n  var lastPoint = lastDevicePoint(history);\n\n  while (i >= 0) {\n    timestampedPoint = history[i];\n\n    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {\n      break;\n    }\n\n    i--;\n  }\n\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n\n  return currentVelocity;\n}\n\nexport { PanSession };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/framer-motion/dist/es/gestures/PanSession.mjs"],"names":["isMouseEvent","isTouchEvent","extractEventInfo","sync","getFrameData","cancelSync","secondsToMilliseconds","addPointerEvent","distance","pipe","PanSession","event","handlers","transformPagePoint","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","offset","x","y","point","timestamp","push","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","update","end","onEnd","onSessionEnd","panInfo","touches","length","initialInfo","onSessionStart","removeListeners","window","subtractPoint","a","b","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity"],"mappings":"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","sourcesContent":["import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { distance, pipe } from 'popmotion';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = getFrameData();\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = getFrameData();\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n"]},"metadata":{},"sourceType":"module"}