{"ast":null,"code":"export default function transitionEmit(_ref) {\n  var swiper = _ref.swiper,\n      runCallbacks = _ref.runCallbacks,\n      direction = _ref.direction,\n      step = _ref.step;\n  var activeIndex = swiper.activeIndex,\n      previousIndex = swiper.previousIndex;\n  var dir = direction;\n\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n\n  swiper.emit(\"transition\".concat(step));\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(\"slideResetTransition\".concat(step));\n      return;\n    }\n\n    swiper.emit(\"slideChangeTransition\".concat(step));\n\n    if (dir === 'next') {\n      swiper.emit(\"slideNextTransition\".concat(step));\n    } else {\n      swiper.emit(\"slidePrevTransition\".concat(step));\n    }\n  }\n}","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/swiper/core/transition/transitionEmit.js"],"names":["transitionEmit","_ref","swiper","runCallbacks","direction","step","activeIndex","previousIndex","dir","emit"],"mappings":"AAAA,eAAe,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AAC3C,MACEC,MADF,GAKID,IALJ,CACEC,MADF;AAAA,MAEEC,YAFF,GAKIF,IALJ,CAEEE,YAFF;AAAA,MAGEC,SAHF,GAKIH,IALJ,CAGEG,SAHF;AAAA,MAIEC,IAJF,GAKIJ,IALJ,CAIEI,IAJF;AAMA,MACEC,WADF,GAGIJ,MAHJ,CACEI,WADF;AAAA,MAEEC,aAFF,GAGIL,MAHJ,CAEEK,aAFF;AAIA,MAAIC,GAAG,GAAGJ,SAAV;;AAEA,MAAI,CAACI,GAAL,EAAU;AACR,QAAIF,WAAW,GAAGC,aAAlB,EAAiCC,GAAG,GAAG,MAAN,CAAjC,KAAmD,IAAIF,WAAW,GAAGC,aAAlB,EAAiCC,GAAG,GAAG,MAAN,CAAjC,KAAmDA,GAAG,GAAG,OAAN;AACvG;;AAEDN,EAAAA,MAAM,CAACO,IAAP,qBAAyBJ,IAAzB;;AAEA,MAAIF,YAAY,IAAIG,WAAW,KAAKC,aAApC,EAAmD;AACjD,QAAIC,GAAG,KAAK,OAAZ,EAAqB;AACnBN,MAAAA,MAAM,CAACO,IAAP,+BAAmCJ,IAAnC;AACA;AACD;;AAEDH,IAAAA,MAAM,CAACO,IAAP,gCAAoCJ,IAApC;;AAEA,QAAIG,GAAG,KAAK,MAAZ,EAAoB;AAClBN,MAAAA,MAAM,CAACO,IAAP,8BAAkCJ,IAAlC;AACD,KAFD,MAEO;AACLH,MAAAA,MAAM,CAACO,IAAP,8BAAkCJ,IAAlC;AACD;AACF;AACF","sourcesContent":["export default function transitionEmit(_ref) {\n  let {\n    swiper,\n    runCallbacks,\n    direction,\n    step\n  } = _ref;\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n\n  swiper.emit(`transition${step}`);\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n\n    swiper.emit(`slideChangeTransition${step}`);\n\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}