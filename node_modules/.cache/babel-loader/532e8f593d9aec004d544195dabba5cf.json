{"ast":null,"code":"var getOptions = function getOptions(options, key) {\n  return (\n    /**\n     * TODO: Make test for this\n     * Always return a new object otherwise delay is overwritten by results of stagger\n     * and this results in no stagger\n     */\n    options[key] ? Object.assign(Object.assign({}, options), options[key]) : Object.assign({}, options)\n  );\n};\n\nexport { getOptions };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/@motionone/dom/dist/animate/utils/options.es.js"],"names":["getOptions","options","key","Object","assign"],"mappings":"AAAA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAUC,GAAV;AAAA;AACnB;AACA;AACA;AACA;AACA;AACAD,IAAAA,OAAO,CAACC,GAAD,CAAP,GAAeC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,OAAlB,CAAd,EAA0CA,OAAO,CAACC,GAAD,CAAjD,CAAf,GAAyEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,OAAlB;AANtD;AAAA,CAAnB;;AAQA,SAASD,UAAT","sourcesContent":["const getOptions = (options, key) => \n/**\n * TODO: Make test for this\n * Always return a new object otherwise delay is overwritten by results of stagger\n * and this results in no stagger\n */\noptions[key] ? Object.assign(Object.assign({}, options), options[key]) : Object.assign({}, options);\n\nexport { getOptions };\n"]},"metadata":{},"sourceType":"module"}