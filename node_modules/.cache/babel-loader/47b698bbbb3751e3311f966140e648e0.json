{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { zip as zipStatic } from '../observable/zip';\nimport { operate } from '../util/lift';\nexport function zip() {\n  var sources = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n\n  return operate(function (source, subscriber) {\n    zipStatic.apply(void 0, __spreadArray([source], __read(sources))).subscribe(subscriber);\n  });\n}","map":{"version":3,"mappings":";AAAA,SAASA,GAAG,IAAIC,SAAhB,QAAiC,mBAAjC;AAEA,SAASC,OAAT,QAAwB,cAAxB;AAmBA,OAAM,SAAUF,GAAV,GAAa;AAAO;;OAAA,yCAAwE;AAAxEG;;;AACxB,SAAOD,OAAO,CAAC,UAACE,MAAD,EAASC,UAAT,EAAmB;AAChCJ,aAAS,MAAT,CAAS,MAAT,EAASK,eAACF,MAAD,GAA+BG,OAAMJ,OAAN,CAA/B,CAAT,EAAuFK,SAAvF,CAAiGH,UAAjG;AACD,GAFa,CAAd;AAGD","names":["zip","zipStatic","operate","sources","source","subscriber","__spreadArray","__read","subscribe"],"sources":["C:\\Users\\Admin\\Downloads\\portpoliopro-main\\client\\node_modules\\rxjs\\src\\internal\\operators\\zip.ts"],"sourcesContent":["import { zip as zipStatic } from '../observable/zip';\nimport { ObservableInput, ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { operate } from '../util/lift';\n\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[]>(otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[], R>(\n  otherInputsAndProject: [...ObservableInputTuple<A>],\n  project: (...values: Cons<T, A>) => R\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[]>(...otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[], R>(\n  ...otherInputsAndProject: [...ObservableInputTuple<A>, (...values: Cons<T, A>) => R]\n): OperatorFunction<T, R>;\n\n/**\n * @deprecated Replaced with {@link zipWith}. Will be removed in v8.\n */\nexport function zip<T, R>(...sources: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, any> {\n  return operate((source, subscriber) => {\n    zipStatic(source as ObservableInput<any>, ...(sources as Array<ObservableInput<any>>)).subscribe(subscriber);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}