{"ast":null,"code":"import _slicedToArray from \"D:/Web Data/Personal-Website/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport sync from 'framesync';\nimport { useEffect } from 'react';\nimport { useInstantLayoutTransition } from '../projection/use-instant-layout-transition.mjs';\nimport { useForceUpdate } from './use-force-update.mjs';\nimport { instantAnimationState } from './use-instant-transition-state.mjs';\n\nfunction useInstantTransition() {\n  var _useForceUpdate = useForceUpdate(),\n      _useForceUpdate2 = _slicedToArray(_useForceUpdate, 2),\n      forceUpdate = _useForceUpdate2[0],\n      forcedRenderCount = _useForceUpdate2[1];\n\n  var startInstantLayoutTransition = useInstantLayoutTransition();\n  useEffect(function () {\n    /**\n     * Unblock after two animation frames, otherwise this will unblock too soon.\n     */\n    sync.postRender(function () {\n      return sync.postRender(function () {\n        return instantAnimationState.current = false;\n      });\n    });\n  }, [forcedRenderCount]);\n  return function (callback) {\n    startInstantLayoutTransition(function () {\n      instantAnimationState.current = true;\n      forceUpdate();\n      callback();\n    });\n  };\n}\n\nexport { useInstantTransition };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/framer-motion/dist/es/utils/use-instant-transition.mjs"],"names":["sync","useEffect","useInstantLayoutTransition","useForceUpdate","instantAnimationState","useInstantTransition","forceUpdate","forcedRenderCount","startInstantLayoutTransition","postRender","current","callback"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,0BAAT,QAA2C,iDAA3C;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,qBAAT,QAAsC,oCAAtC;;AAEA,SAASC,oBAAT,GAAgC;AAC5B,wBAAyCF,cAAc,EAAvD;AAAA;AAAA,MAAOG,WAAP;AAAA,MAAoBC,iBAApB;;AACA,MAAMC,4BAA4B,GAAGN,0BAA0B,EAA/D;AACAD,EAAAA,SAAS,CAAC,YAAM;AACZ;AACR;AACA;AACQD,IAAAA,IAAI,CAACS,UAAL,CAAgB;AAAA,aAAMT,IAAI,CAACS,UAAL,CAAgB;AAAA,eAAOL,qBAAqB,CAACM,OAAtB,GAAgC,KAAvC;AAAA,OAAhB,CAAN;AAAA,KAAhB;AACH,GALQ,EAKN,CAACH,iBAAD,CALM,CAAT;AAMA,SAAO,UAACI,QAAD,EAAc;AACjBH,IAAAA,4BAA4B,CAAC,YAAM;AAC/BJ,MAAAA,qBAAqB,CAACM,OAAtB,GAAgC,IAAhC;AACAJ,MAAAA,WAAW;AACXK,MAAAA,QAAQ;AACX,KAJ2B,CAA5B;AAKH,GAND;AAOH;;AAED,SAASN,oBAAT","sourcesContent":["import sync from 'framesync';\nimport { useEffect } from 'react';\nimport { useInstantLayoutTransition } from '../projection/use-instant-layout-transition.mjs';\nimport { useForceUpdate } from './use-force-update.mjs';\nimport { instantAnimationState } from './use-instant-transition-state.mjs';\n\nfunction useInstantTransition() {\n    const [forceUpdate, forcedRenderCount] = useForceUpdate();\n    const startInstantLayoutTransition = useInstantLayoutTransition();\n    useEffect(() => {\n        /**\n         * Unblock after two animation frames, otherwise this will unblock too soon.\n         */\n        sync.postRender(() => sync.postRender(() => (instantAnimationState.current = false)));\n    }, [forcedRenderCount]);\n    return (callback) => {\n        startInstantLayoutTransition(() => {\n            instantAnimationState.current = true;\n            forceUpdate();\n            callback();\n        });\n    };\n}\n\nexport { useInstantTransition };\n"]},"metadata":{},"sourceType":"module"}