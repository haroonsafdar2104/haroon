{"ast":null,"code":"import { resolveElements } from '../../utils/resolve-elements.es.js';\nconst resizeHandlers = new WeakMap();\nlet observer;\n\nfunction getElementSize(target, borderBoxSize) {\n  if (borderBoxSize) {\n    const {\n      inlineSize,\n      blockSize\n    } = borderBoxSize[0];\n    return {\n      width: inlineSize,\n      height: blockSize\n    };\n  } else if (target instanceof SVGElement && \"getBBox\" in target) {\n    return target.getBBox();\n  } else {\n    return {\n      width: target.offsetWidth,\n      height: target.offsetHeight\n    };\n  }\n}\n\nfunction notifyTarget(_ref) {\n  let {\n    target,\n    contentRect,\n    borderBoxSize\n  } = _ref;\n\n  var _a;\n\n  (_a = resizeHandlers.get(target)) === null || _a === void 0 ? void 0 : _a.forEach(handler => {\n    handler({\n      target,\n      contentSize: contentRect,\n\n      get size() {\n        return getElementSize(target, borderBoxSize);\n      }\n\n    });\n  });\n}\n\nfunction notifyAll(entries) {\n  entries.forEach(notifyTarget);\n}\n\nfunction createResizeObserver() {\n  if (typeof ResizeObserver === \"undefined\") return;\n  observer = new ResizeObserver(notifyAll);\n}\n\nfunction resizeElement(target, handler) {\n  if (!observer) createResizeObserver();\n  const elements = resolveElements(target);\n  elements.forEach(element => {\n    let elementHandlers = resizeHandlers.get(element);\n\n    if (!elementHandlers) {\n      elementHandlers = new Set();\n      resizeHandlers.set(element, elementHandlers);\n    }\n\n    elementHandlers.add(handler);\n    observer === null || observer === void 0 ? void 0 : observer.observe(element);\n  });\n  return () => {\n    elements.forEach(element => {\n      const elementHandlers = resizeHandlers.get(element);\n      elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.delete(handler);\n\n      if (!(elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.size)) {\n        observer === null || observer === void 0 ? void 0 : observer.unobserve(element);\n      }\n    });\n  };\n}\n\nexport { resizeElement };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/@motionone/dom/dist/gestures/resize/handle-element.es.js"],"names":["resolveElements","resizeHandlers","WeakMap","observer","getElementSize","target","borderBoxSize","inlineSize","blockSize","width","height","SVGElement","getBBox","offsetWidth","offsetHeight","notifyTarget","contentRect","_a","get","forEach","handler","contentSize","size","notifyAll","entries","createResizeObserver","ResizeObserver","resizeElement","elements","element","elementHandlers","Set","set","add","observe","delete","unobserve"],"mappings":"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","sourcesContent":["import { resolveElements } from '../../utils/resolve-elements.es.js';\n\nconst resizeHandlers = new WeakMap();\nlet observer;\nfunction getElementSize(target, borderBoxSize) {\n    if (borderBoxSize) {\n        const { inlineSize, blockSize } = borderBoxSize[0];\n        return { width: inlineSize, height: blockSize };\n    }\n    else if (target instanceof SVGElement && \"getBBox\" in target) {\n        return target.getBBox();\n    }\n    else {\n        return {\n            width: target.offsetWidth,\n            height: target.offsetHeight,\n        };\n    }\n}\nfunction notifyTarget({ target, contentRect, borderBoxSize, }) {\n    var _a;\n    (_a = resizeHandlers.get(target)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => {\n        handler({\n            target,\n            contentSize: contentRect,\n            get size() {\n                return getElementSize(target, borderBoxSize);\n            },\n        });\n    });\n}\nfunction notifyAll(entries) {\n    entries.forEach(notifyTarget);\n}\nfunction createResizeObserver() {\n    if (typeof ResizeObserver === \"undefined\")\n        return;\n    observer = new ResizeObserver(notifyAll);\n}\nfunction resizeElement(target, handler) {\n    if (!observer)\n        createResizeObserver();\n    const elements = resolveElements(target);\n    elements.forEach((element) => {\n        let elementHandlers = resizeHandlers.get(element);\n        if (!elementHandlers) {\n            elementHandlers = new Set();\n            resizeHandlers.set(element, elementHandlers);\n        }\n        elementHandlers.add(handler);\n        observer === null || observer === void 0 ? void 0 : observer.observe(element);\n    });\n    return () => {\n        elements.forEach((element) => {\n            const elementHandlers = resizeHandlers.get(element);\n            elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.delete(handler);\n            if (!(elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.size)) {\n                observer === null || observer === void 0 ? void 0 : observer.unobserve(element);\n            }\n        });\n    };\n}\n\nexport { resizeElement };\n"]},"metadata":{},"sourceType":"module"}