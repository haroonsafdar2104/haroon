{"ast":null,"code":"import { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\nexport function isObservable(obj) {\n  return !!obj && (obj instanceof Observable || isFunction(obj.lift) && isFunction(obj.subscribe));\n}","map":{"version":3,"mappings":"AACA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAMA,OAAM,SAAUC,YAAV,CAAuBC,GAAvB,EAA+B;AAGnC,SAAO,CAAC,CAACA,GAAF,KAAUA,GAAG,YAAYH,UAAf,IAA8BC,UAAU,CAACE,GAAG,CAACC,IAAL,CAAV,IAAwBH,UAAU,CAACE,GAAG,CAACE,SAAL,CAA1E,CAAP;AACD","names":["Observable","isFunction","isObservable","obj","lift","subscribe"],"sources":["D:\\Web Data\\Personal-Website\\client\\node_modules\\rxjs\\src\\internal\\util\\isObservable.ts"],"sourcesContent":["/** prettier */\nimport { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable(obj: any): obj is Observable<unknown> {\n  // The !! is to ensure that this publicly exposed function returns\n  // `false` if something like `null` or `0` is passed.\n  return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n}\n"]},"metadata":{},"sourceType":"module"}