{"ast":null,"code":"import _objectSpread from \"D:/Web Data/Personal-Website/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender() {\n  var forwardMotionProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  var useRender = function useRender(Component, props, projectionId, ref, _ref, isStatic) {\n    var latestValues = _ref.latestValues;\n    var useVisualProps = isSVGComponent(Component) ? useSVGProps : useHTMLProps;\n    var visualProps = useVisualProps(props, latestValues, isStatic);\n    var filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n\n    var elementProps = _objectSpread(_objectSpread(_objectSpread({}, filteredProps), visualProps), {}, {\n      ref: ref\n    });\n\n    if (projectionId) {\n      elementProps[\"data-projection-id\"] = projectionId;\n    }\n\n    return createElement(Component, elementProps);\n  };\n\n  return useRender;\n}\n\nexport { createUseRender };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/framer-motion/dist/es/render/dom/use-render.mjs"],"names":["createElement","useHTMLProps","filterProps","isSVGComponent","useSVGProps","createUseRender","forwardMotionProps","useRender","Component","props","projectionId","ref","isStatic","latestValues","useVisualProps","visualProps","filteredProps","elementProps"],"mappings":";AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,SAASC,eAAT,GAAqD;AAAA,MAA5BC,kBAA4B,uEAAP,KAAO;;AACjD,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,YAAnB,EAAiCC,GAAjC,QAAwDC,QAAxD,EAAqE;AAAA,QAA7BC,YAA6B,QAA7BA,YAA6B;AACnF,QAAMC,cAAc,GAAGX,cAAc,CAACK,SAAD,CAAd,GACjBJ,WADiB,GAEjBH,YAFN;AAGA,QAAMc,WAAW,GAAGD,cAAc,CAACL,KAAD,EAAQI,YAAR,EAAsBD,QAAtB,CAAlC;AACA,QAAMI,aAAa,GAAGd,WAAW,CAACO,KAAD,EAAQ,OAAOD,SAAP,KAAqB,QAA7B,EAAuCF,kBAAvC,CAAjC;;AACA,QAAMW,YAAY,iDACXD,aADW,GAEXD,WAFW;AAGdJ,MAAAA,GAAG,EAAHA;AAHc,MAAlB;;AAKA,QAAID,YAAJ,EAAkB;AACdO,MAAAA,YAAY,CAAC,oBAAD,CAAZ,GAAqCP,YAArC;AACH;;AACD,WAAOV,aAAa,CAACQ,SAAD,EAAYS,YAAZ,CAApB;AACH,GAfD;;AAgBA,SAAOV,SAAP;AACH;;AAED,SAASF,eAAT","sourcesContent":["import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n"]},"metadata":{},"sourceType":"module"}