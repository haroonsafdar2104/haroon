{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { operate } from '../util/lift';\nimport { concatAll } from './concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from '../observable/from';\nexport function concat() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var scheduler = popScheduler(args);\n  return operate(function (source, subscriber) {\n    concatAll()(from(__spreadArray([source], __read(args)), scheduler)).subscribe(subscriber);\n  });\n}","map":{"version":3,"mappings":";AACA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,IAAT,QAAqB,oBAArB;AAYA,OAAM,SAAUC,MAAV,GAAgB;AAAO;;OAAA,yCAAc;AAAdC;;;AAC3B,MAAMC,SAAS,GAAGJ,YAAY,CAACG,IAAD,CAA9B;AACA,SAAOL,OAAO,CAAC,UAACO,MAAD,EAASC,UAAT,EAAmB;AAChCP,aAAS,GAAGE,IAAI,gBAAEI,MAAF,GAAQE,OAAKJ,IAAL,CAAR,GAAoBC,SAApB,CAAP,CAAT,CAAgDI,SAAhD,CAA0DF,UAA1D;AACD,GAFa,CAAd;AAGD","names":["operate","concatAll","popScheduler","from","concat","args","scheduler","source","subscriber","__read","subscribe"],"sources":["D:\\Web Data\\Personal-Website\\client\\node_modules\\rxjs\\src\\internal\\operators\\concat.ts"],"sourcesContent":["import { ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { concatAll } from './concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from '../observable/from';\n\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\nexport function concat<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\nexport function concat<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\n/**\n * @deprecated Replaced with {@link concatWith}. Will be removed in v8.\n */\nexport function concat<T, R>(...args: any[]): OperatorFunction<T, R> {\n  const scheduler = popScheduler(args);\n  return operate((source, subscriber) => {\n    concatAll()(from([source, ...args], scheduler)).subscribe(subscriber);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}