{"ast":null,"code":"import { getWindow } from 'ssr-window';\nexport default function History(_ref) {\n  var swiper = _ref.swiper,\n      extendParams = _ref.extendParams,\n      on = _ref.on;\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  var initialized = false;\n  var paths = {};\n\n  var slugify = function slugify(text) {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n\n  var getPathValues = function getPathValues(urlOverride) {\n    var window = getWindow();\n    var location;\n\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n\n    var pathArray = location.pathname.slice(1).split('/').filter(function (part) {\n      return part !== '';\n    });\n    var total = pathArray.length;\n    var key = pathArray[total - 2];\n    var value = pathArray[total - 1];\n    return {\n      key: key,\n      value: value\n    };\n  };\n\n  var setHistory = function setHistory(key, index) {\n    var window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    var location;\n\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n\n    var slide = swiper.slides.eq(index);\n    var value = slugify(slide.attr('data-history'));\n\n    if (swiper.params.history.root.length > 0) {\n      var root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = \"\".concat(root, \"/\").concat(key, \"/\").concat(value);\n    } else if (!location.pathname.includes(key)) {\n      value = \"\".concat(key, \"/\").concat(value);\n    }\n\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n\n    var currentState = window.history.state;\n\n    if (currentState && currentState.value === value) {\n      return;\n    }\n\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value: value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value: value\n      }, null, value);\n    }\n  };\n\n  var scrollToSlide = function scrollToSlide(speed, value, runCallbacks) {\n    if (value) {\n      for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n        var slide = swiper.slides.eq(i);\n        var slideHistory = slugify(slide.attr('data-history'));\n\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          var index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n\n  var setHistoryPopState = function setHistoryPopState() {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n\n  var init = function init() {\n    var window = getWindow();\n    if (!swiper.params.history) return;\n\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) return;\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  var destroy = function destroy() {\n    var window = getWindow();\n\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  on('init', function () {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', function () {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', function () {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', function () {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/swiper/modules/history/history.js"],"names":["getWindow","History","_ref","swiper","extendParams","on","history","enabled","root","replaceState","key","keepQuery","initialized","paths","slugify","text","toString","replace","getPathValues","urlOverride","window","location","URL","pathArray","pathname","slice","split","filter","part","total","length","value","setHistory","index","params","url","slide","slides","eq","attr","includes","search","currentState","state","pushState","scrollToSlide","speed","runCallbacks","i","slideHistory","hasClass","slideDuplicateClass","slideTo","setHistoryPopState","init","hashNavigation","runCallbacksOnInit","addEventListener","destroy","removeEventListener","activeIndex","cssMode"],"mappings":"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","sourcesContent":["import { getWindow } from 'ssr-window';\nexport default function History(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n\n    const slide = swiper.slides.eq(index);\n    let value = slugify(slide.attr('data-history'));\n\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key}/${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n\n    const currentState = window.history.state;\n\n    if (currentState && currentState.value === value) {\n      return;\n    }\n\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = slugify(slide.attr('data-history'));\n\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) return;\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  const destroy = () => {\n    const window = getWindow();\n\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}