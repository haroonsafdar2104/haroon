{"ast":null,"code":"import * as React from 'react';\nimport { useContext, useRef, useMemo } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { DeprecatedLayoutGroupContext } from '../../context/DeprecatedLayoutGroupContext.mjs';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { nodeGroup } from '../../projection/node/group.mjs';\n\nconst shouldInheritGroup = inherit => inherit === true;\n\nconst shouldInheritId = inherit => shouldInheritGroup(inherit === true) || inherit === \"id\";\n\nconst LayoutGroup = _ref => {\n  let {\n    children,\n    id,\n    inheritId,\n    inherit = true\n  } = _ref;\n  // Maintain backwards-compatibility with inheritId until 7.0\n  if (inheritId !== undefined) inherit = inheritId;\n  const layoutGroupContext = useContext(LayoutGroupContext);\n  const deprecatedLayoutGroupContext = useContext(DeprecatedLayoutGroupContext);\n  const [forceRender, key] = useForceUpdate();\n  const context = useRef(null);\n  const upstreamId = layoutGroupContext.id || deprecatedLayoutGroupContext;\n\n  if (context.current === null) {\n    if (shouldInheritId(inherit) && upstreamId) {\n      id = id ? upstreamId + \"-\" + id : upstreamId;\n    }\n\n    context.current = {\n      id,\n      group: shouldInheritGroup(inherit) ? layoutGroupContext.group || nodeGroup() : nodeGroup()\n    };\n  }\n\n  const memoizedContext = useMemo(() => ({ ...context.current,\n    forceRender\n  }), [key]);\n  return React.createElement(LayoutGroupContext.Provider, {\n    value: memoizedContext\n  }, children);\n};\n\nexport { LayoutGroup };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/framer-motion/dist/es/components/LayoutGroup/index.mjs"],"names":["React","useContext","useRef","useMemo","LayoutGroupContext","DeprecatedLayoutGroupContext","useForceUpdate","nodeGroup","shouldInheritGroup","inherit","shouldInheritId","LayoutGroup","children","id","inheritId","undefined","layoutGroupContext","deprecatedLayoutGroupContext","forceRender","key","context","upstreamId","current","group","memoizedContext","createElement","Provider","value"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,SAASC,kBAAT,QAAmC,sCAAnC;AACA,SAASC,4BAAT,QAA6C,gDAA7C;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,SAAT,QAA0B,iCAA1B;;AAEA,MAAMC,kBAAkB,GAAIC,OAAD,IAAaA,OAAO,KAAK,IAApD;;AACA,MAAMC,eAAe,GAAID,OAAD,IAAaD,kBAAkB,CAACC,OAAO,KAAK,IAAb,CAAlB,IAAwCA,OAAO,KAAK,IAAzF;;AACA,MAAME,WAAW,GAAG,QAAiD;AAAA,MAAhD;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,EAAZ;AAAgBC,IAAAA,SAAhB;AAA2BL,IAAAA,OAAO,GAAG;AAArC,GAAgD;AACjE;AACA,MAAIK,SAAS,KAAKC,SAAlB,EACIN,OAAO,GAAGK,SAAV;AACJ,QAAME,kBAAkB,GAAGf,UAAU,CAACG,kBAAD,CAArC;AACA,QAAMa,4BAA4B,GAAGhB,UAAU,CAACI,4BAAD,CAA/C;AACA,QAAM,CAACa,WAAD,EAAcC,GAAd,IAAqBb,cAAc,EAAzC;AACA,QAAMc,OAAO,GAAGlB,MAAM,CAAC,IAAD,CAAtB;AACA,QAAMmB,UAAU,GAAGL,kBAAkB,CAACH,EAAnB,IAAyBI,4BAA5C;;AACA,MAAIG,OAAO,CAACE,OAAR,KAAoB,IAAxB,EAA8B;AAC1B,QAAIZ,eAAe,CAACD,OAAD,CAAf,IAA4BY,UAAhC,EAA4C;AACxCR,MAAAA,EAAE,GAAGA,EAAE,GAAGQ,UAAU,GAAG,GAAb,GAAmBR,EAAtB,GAA2BQ,UAAlC;AACH;;AACDD,IAAAA,OAAO,CAACE,OAAR,GAAkB;AACdT,MAAAA,EADc;AAEdU,MAAAA,KAAK,EAAEf,kBAAkB,CAACC,OAAD,CAAlB,GACDO,kBAAkB,CAACO,KAAnB,IAA4BhB,SAAS,EADpC,GAEDA,SAAS;AAJD,KAAlB;AAMH;;AACD,QAAMiB,eAAe,GAAGrB,OAAO,CAAC,OAAO,EAAE,GAAGiB,OAAO,CAACE,OAAb;AAAsBJ,IAAAA;AAAtB,GAAP,CAAD,EAA8C,CAACC,GAAD,CAA9C,CAA/B;AACA,SAAQnB,KAAK,CAACyB,aAAN,CAAoBrB,kBAAkB,CAACsB,QAAvC,EAAiD;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAjD,EAA6EZ,QAA7E,CAAR;AACH,CAtBD;;AAwBA,SAASD,WAAT","sourcesContent":["import * as React from 'react';\nimport { useContext, useRef, useMemo } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { DeprecatedLayoutGroupContext } from '../../context/DeprecatedLayoutGroupContext.mjs';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { nodeGroup } from '../../projection/node/group.mjs';\n\nconst shouldInheritGroup = (inherit) => inherit === true;\nconst shouldInheritId = (inherit) => shouldInheritGroup(inherit === true) || inherit === \"id\";\nconst LayoutGroup = ({ children, id, inheritId, inherit = true }) => {\n    // Maintain backwards-compatibility with inheritId until 7.0\n    if (inheritId !== undefined)\n        inherit = inheritId;\n    const layoutGroupContext = useContext(LayoutGroupContext);\n    const deprecatedLayoutGroupContext = useContext(DeprecatedLayoutGroupContext);\n    const [forceRender, key] = useForceUpdate();\n    const context = useRef(null);\n    const upstreamId = layoutGroupContext.id || deprecatedLayoutGroupContext;\n    if (context.current === null) {\n        if (shouldInheritId(inherit) && upstreamId) {\n            id = id ? upstreamId + \"-\" + id : upstreamId;\n        }\n        context.current = {\n            id,\n            group: shouldInheritGroup(inherit)\n                ? layoutGroupContext.group || nodeGroup()\n                : nodeGroup(),\n        };\n    }\n    const memoizedContext = useMemo(() => ({ ...context.current, forceRender }), [key]);\n    return (React.createElement(LayoutGroupContext.Provider, { value: memoizedContext }, children));\n};\n\nexport { LayoutGroup };\n"]},"metadata":{},"sourceType":"module"}