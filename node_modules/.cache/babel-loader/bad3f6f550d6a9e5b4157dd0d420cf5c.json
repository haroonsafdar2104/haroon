{"ast":null,"code":"import { getWindow } from 'ssr-window';\nexport default function Observer(_ref) {\n  var swiper = _ref.swiper,\n      extendParams = _ref.extendParams,\n      on = _ref.on,\n      emit = _ref.emit;\n  var observers = [];\n  var window = getWindow();\n\n  var attach = function attach(target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    var observer = new ObserverFunc(function (mutations) {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n\n      var observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n\n  var init = function init() {\n    if (!swiper.params.observer) return;\n\n    if (swiper.params.observeParents) {\n      var containerParents = swiper.$el.parents();\n\n      for (var i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    } // Observe container\n\n\n    attach(swiper.$el[0], {\n      childList: swiper.params.observeSlideChildren\n    }); // Observe wrapper\n\n    attach(swiper.$wrapperEl[0], {\n      attributes: false\n    });\n  };\n\n  var destroy = function destroy() {\n    observers.forEach(function (observer) {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/swiper/core/modules/observer/observer.js"],"names":["getWindow","Observer","_ref","swiper","extendParams","on","emit","observers","window","attach","target","options","ObserverFunc","MutationObserver","WebkitMutationObserver","observer","mutations","length","observerUpdate","requestAnimationFrame","setTimeout","observe","attributes","childList","characterData","push","init","params","observeParents","containerParents","$el","parents","i","observeSlideChildren","$wrapperEl","destroy","forEach","disconnect","splice"],"mappings":"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","sourcesContent":["import { getWindow } from 'ssr-window';\nexport default function Observer(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const observers = [];\n  const window = getWindow();\n\n  const attach = function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n\n  const init = () => {\n    if (!swiper.params.observer) return;\n\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    } // Observe container\n\n\n    attach(swiper.$el[0], {\n      childList: swiper.params.observeSlideChildren\n    }); // Observe wrapper\n\n    attach(swiper.$wrapperEl[0], {\n      attributes: false\n    });\n  };\n\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}"]},"metadata":{},"sourceType":"module"}