{"ast":null,"code":"import { isCSSVariable } from '../../render/dom/utils/is-css-variable.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { MotionValue } from '../index.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n  constructor() {\n    super(...arguments);\n    this.members = [];\n    this.transforms = new Set();\n  }\n\n  add(name) {\n    let memberName;\n\n    if (transformProps.has(name)) {\n      this.transforms.add(name);\n      memberName = \"transform\";\n    } else if (!name.startsWith(\"origin\") && !isCSSVariable(name) && name !== \"willChange\") {\n      memberName = camelToDash(name);\n    }\n\n    if (memberName) {\n      addUniqueItem(this.members, memberName);\n      this.update();\n    }\n  }\n\n  remove(name) {\n    if (transformProps.has(name)) {\n      this.transforms.delete(name);\n\n      if (!this.transforms.size) {\n        removeItem(this.members, \"transform\");\n      }\n    } else {\n      removeItem(this.members, camelToDash(name));\n    }\n\n    this.update();\n  }\n\n  update() {\n    this.set(this.members.length ? this.members.join(\", \") : \"auto\");\n  }\n\n}\n\nfunction useWillChange() {\n  return useConstant(() => new WillChangeMotionValue(\"auto\"));\n}\n\nexport { WillChangeMotionValue, useWillChange };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/framer-motion/dist/es/value/use-will-change/index.mjs"],"names":["isCSSVariable","transformProps","addUniqueItem","removeItem","useConstant","MotionValue","camelToDash","WillChangeMotionValue","constructor","arguments","members","transforms","Set","add","name","memberName","has","startsWith","update","remove","delete","size","set","length","join","useWillChange"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4CAA9B;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,uBAA1C;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,WAAT,QAA4B,0CAA5B;;AAEA,MAAMC,qBAAN,SAAoCF,WAApC,CAAgD;AAC5CG,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,UAAL,GAAkB,IAAIC,GAAJ,EAAlB;AACH;;AACDC,EAAAA,GAAG,CAACC,IAAD,EAAO;AACN,QAAIC,UAAJ;;AACA,QAAId,cAAc,CAACe,GAAf,CAAmBF,IAAnB,CAAJ,EAA8B;AAC1B,WAAKH,UAAL,CAAgBE,GAAhB,CAAoBC,IAApB;AACAC,MAAAA,UAAU,GAAG,WAAb;AACH,KAHD,MAIK,IAAI,CAACD,IAAI,CAACG,UAAL,CAAgB,QAAhB,CAAD,IACL,CAACjB,aAAa,CAACc,IAAD,CADT,IAELA,IAAI,KAAK,YAFR,EAEsB;AACvBC,MAAAA,UAAU,GAAGT,WAAW,CAACQ,IAAD,CAAxB;AACH;;AACD,QAAIC,UAAJ,EAAgB;AACZb,MAAAA,aAAa,CAAC,KAAKQ,OAAN,EAAeK,UAAf,CAAb;AACA,WAAKG,MAAL;AACH;AACJ;;AACDC,EAAAA,MAAM,CAACL,IAAD,EAAO;AACT,QAAIb,cAAc,CAACe,GAAf,CAAmBF,IAAnB,CAAJ,EAA8B;AAC1B,WAAKH,UAAL,CAAgBS,MAAhB,CAAuBN,IAAvB;;AACA,UAAI,CAAC,KAAKH,UAAL,CAAgBU,IAArB,EAA2B;AACvBlB,QAAAA,UAAU,CAAC,KAAKO,OAAN,EAAe,WAAf,CAAV;AACH;AACJ,KALD,MAMK;AACDP,MAAAA,UAAU,CAAC,KAAKO,OAAN,EAAeJ,WAAW,CAACQ,IAAD,CAA1B,CAAV;AACH;;AACD,SAAKI,MAAL;AACH;;AACDA,EAAAA,MAAM,GAAG;AACL,SAAKI,GAAL,CAAS,KAAKZ,OAAL,CAAaa,MAAb,GAAsB,KAAKb,OAAL,CAAac,IAAb,CAAkB,IAAlB,CAAtB,GAAgD,MAAzD;AACH;;AApC2C;;AAsChD,SAASC,aAAT,GAAyB;AACrB,SAAOrB,WAAW,CAAC,MAAM,IAAIG,qBAAJ,CAA0B,MAA1B,CAAP,CAAlB;AACH;;AAED,SAASA,qBAAT,EAAgCkB,aAAhC","sourcesContent":["import { isCSSVariable } from '../../render/dom/utils/is-css-variable.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { MotionValue } from '../index.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.members = [];\n        this.transforms = new Set();\n    }\n    add(name) {\n        let memberName;\n        if (transformProps.has(name)) {\n            this.transforms.add(name);\n            memberName = \"transform\";\n        }\n        else if (!name.startsWith(\"origin\") &&\n            !isCSSVariable(name) &&\n            name !== \"willChange\") {\n            memberName = camelToDash(name);\n        }\n        if (memberName) {\n            addUniqueItem(this.members, memberName);\n            this.update();\n        }\n    }\n    remove(name) {\n        if (transformProps.has(name)) {\n            this.transforms.delete(name);\n            if (!this.transforms.size) {\n                removeItem(this.members, \"transform\");\n            }\n        }\n        else {\n            removeItem(this.members, camelToDash(name));\n        }\n        this.update();\n    }\n    update() {\n        this.set(this.members.length ? this.members.join(\", \") : \"auto\");\n    }\n}\nfunction useWillChange() {\n    return useConstant(() => new WillChangeMotionValue(\"auto\"));\n}\n\nexport { WillChangeMotionValue, useWillChange };\n"]},"metadata":{},"sourceType":"module"}