{"ast":null,"code":"import { resolveElements } from '../utils/resolve-elements.es.js';\nimport { isFunction } from '@motionone/utils';\nconst thresholds = {\n  any: 0,\n  all: 1\n};\n\nfunction inView(elementOrSelector, onStart) {\n  let {\n    root,\n    margin: rootMargin,\n    amount = \"any\"\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  /**\n   * If this browser doesn't support IntersectionObserver, return a dummy stop function.\n   * Default triggering of onStart is tricky - it could be used for starting/stopping\n   * videos, lazy loading content etc. We could provide an option to enable a fallback, or\n   * provide a fallback callback option.\n   */\n  if (typeof IntersectionObserver === \"undefined\") {\n    return () => {};\n  }\n\n  const elements = resolveElements(elementOrSelector);\n  const activeIntersections = new WeakMap();\n\n  const onIntersectionChange = entries => {\n    entries.forEach(entry => {\n      const onEnd = activeIntersections.get(entry.target);\n      /**\n       * If there's no change to the intersection, we don't need to\n       * do anything here.\n       */\n\n      if (entry.isIntersecting === Boolean(onEnd)) return;\n\n      if (entry.isIntersecting) {\n        const newOnEnd = onStart(entry);\n\n        if (isFunction(newOnEnd)) {\n          activeIntersections.set(entry.target, newOnEnd);\n        } else {\n          observer.unobserve(entry.target);\n        }\n      } else if (onEnd) {\n        onEnd(entry);\n        activeIntersections.delete(entry.target);\n      }\n    });\n  };\n\n  const observer = new IntersectionObserver(onIntersectionChange, {\n    root,\n    rootMargin,\n    threshold: typeof amount === \"number\" ? amount : thresholds[amount]\n  });\n  elements.forEach(element => observer.observe(element));\n  return () => observer.disconnect();\n}\n\nexport { inView };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/@motionone/dom/dist/gestures/in-view.es.js"],"names":["resolveElements","isFunction","thresholds","any","all","inView","elementOrSelector","onStart","root","margin","rootMargin","amount","IntersectionObserver","elements","activeIntersections","WeakMap","onIntersectionChange","entries","forEach","entry","onEnd","get","target","isIntersecting","Boolean","newOnEnd","set","observer","unobserve","delete","threshold","element","observe","disconnect"],"mappings":"AAAA,SAASA,eAAT,QAAgC,iCAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,GAAG,EAAE,CADU;AAEfC,EAAAA,GAAG,EAAE;AAFU,CAAnB;;AAIA,SAASC,MAAT,CAAgBC,iBAAhB,EAAmCC,OAAnC,EAA+F;AAAA,MAAnD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAM,EAAEC,UAAhB;AAA4BC,IAAAA,MAAM,GAAG;AAArC,GAAmD,uEAAJ,EAAI;;AAC3F;AACJ;AACA;AACA;AACA;AACA;AACI,MAAI,OAAOC,oBAAP,KAAgC,WAApC,EAAiD;AAC7C,WAAO,MAAM,CAAG,CAAhB;AACH;;AACD,QAAMC,QAAQ,GAAGb,eAAe,CAACM,iBAAD,CAAhC;AACA,QAAMQ,mBAAmB,GAAG,IAAIC,OAAJ,EAA5B;;AACA,QAAMC,oBAAoB,GAAIC,OAAD,IAAa;AACtCA,IAAAA,OAAO,CAACC,OAAR,CAAiBC,KAAD,IAAW;AACvB,YAAMC,KAAK,GAAGN,mBAAmB,CAACO,GAApB,CAAwBF,KAAK,CAACG,MAA9B,CAAd;AACA;AACZ;AACA;AACA;;AACY,UAAIH,KAAK,CAACI,cAAN,KAAyBC,OAAO,CAACJ,KAAD,CAApC,EACI;;AACJ,UAAID,KAAK,CAACI,cAAV,EAA0B;AACtB,cAAME,QAAQ,GAAGlB,OAAO,CAACY,KAAD,CAAxB;;AACA,YAAIlB,UAAU,CAACwB,QAAD,CAAd,EAA0B;AACtBX,UAAAA,mBAAmB,CAACY,GAApB,CAAwBP,KAAK,CAACG,MAA9B,EAAsCG,QAAtC;AACH,SAFD,MAGK;AACDE,UAAAA,QAAQ,CAACC,SAAT,CAAmBT,KAAK,CAACG,MAAzB;AACH;AACJ,OARD,MASK,IAAIF,KAAJ,EAAW;AACZA,QAAAA,KAAK,CAACD,KAAD,CAAL;AACAL,QAAAA,mBAAmB,CAACe,MAApB,CAA2BV,KAAK,CAACG,MAAjC;AACH;AACJ,KArBD;AAsBH,GAvBD;;AAwBA,QAAMK,QAAQ,GAAG,IAAIf,oBAAJ,CAAyBI,oBAAzB,EAA+C;AAC5DR,IAAAA,IAD4D;AAE5DE,IAAAA,UAF4D;AAG5DoB,IAAAA,SAAS,EAAE,OAAOnB,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCT,UAAU,CAACS,MAAD;AAHC,GAA/C,CAAjB;AAKAE,EAAAA,QAAQ,CAACK,OAAT,CAAkBa,OAAD,IAAaJ,QAAQ,CAACK,OAAT,CAAiBD,OAAjB,CAA9B;AACA,SAAO,MAAMJ,QAAQ,CAACM,UAAT,EAAb;AACH;;AAED,SAAS5B,MAAT","sourcesContent":["import { resolveElements } from '../utils/resolve-elements.es.js';\nimport { isFunction } from '@motionone/utils';\n\nconst thresholds = {\n    any: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"any\" } = {}) {\n    /**\n     * If this browser doesn't support IntersectionObserver, return a dummy stop function.\n     * Default triggering of onStart is tricky - it could be used for starting/stopping\n     * videos, lazy loading content etc. We could provide an option to enable a fallback, or\n     * provide a fallback callback option.\n     */\n    if (typeof IntersectionObserver === \"undefined\") {\n        return () => { };\n    }\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (isFunction(newOnEnd)) {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n"]},"metadata":{},"sourceType":"module"}