{"ast":null,"code":"import { createErrorClass } from './createErrorClass';\nexport var NotFoundError = createErrorClass(function (_super) {\n  return function NotFoundErrorImpl(message) {\n    _super(this);\n\n    this.name = 'NotFoundError';\n    this.message = message;\n  };\n});","map":{"version":3,"mappings":"AAAA,SAASA,gBAAT,QAAiC,oBAAjC;AAoBA,OAAO,IAAMC,aAAa,GAAsBD,gBAAgB,CAC9D,UAACE,MAAD,EAAO;AACL,kBAASC,iBAAT,CAAsCC,OAAtC,EAAqD;AACnDF,UAAM,CAAC,IAAD,CAAN;;AACA,SAAKG,IAAL,GAAY,eAAZ;AACA,SAAKD,OAAL,GAAeA,OAAf;AACD,GAJD;AAIC,CAN2D,CAAzD","names":["createErrorClass","NotFoundError","_super","NotFoundErrorImpl","message","name"],"sources":["C:\\Users\\Admin\\Downloads\\portpoliopro-main\\client\\node_modules\\rxjs\\src\\internal\\util\\NotFoundError.ts"],"sourcesContent":["import { createErrorClass } from './createErrorClass';\n\nexport interface NotFoundError extends Error {}\n\nexport interface NotFoundErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): NotFoundError;\n}\n\n/**\n * An error thrown when a value or values are missing from an\n * observable sequence.\n *\n * @see {@link operators/single}\n *\n * @class NotFoundError\n */\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\n  (_super) =>\n    function NotFoundErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'NotFoundError';\n      this.message = message;\n    }\n);\n"]},"metadata":{},"sourceType":"module"}