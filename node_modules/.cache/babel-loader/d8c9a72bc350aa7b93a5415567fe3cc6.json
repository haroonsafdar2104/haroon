{"ast":null,"code":"import React from 'react';\nimport Swiper from 'swiper';\n\nfunction calcLoopedSlides(slides, swiperParams) {\n  let slidesPerViewParams = swiperParams.slidesPerView;\n\n  if (swiperParams.breakpoints) {\n    const breakpoint = Swiper.prototype.getBreakpoint(swiperParams.breakpoints);\n    const breakpointOnlyParams = breakpoint in swiperParams.breakpoints ? swiperParams.breakpoints[breakpoint] : undefined;\n\n    if (breakpointOnlyParams && breakpointOnlyParams.slidesPerView) {\n      slidesPerViewParams = breakpointOnlyParams.slidesPerView;\n    }\n  }\n\n  let loopedSlides = Math.ceil(parseFloat(swiperParams.loopedSlides || slidesPerViewParams, 10));\n  loopedSlides += swiperParams.loopAdditionalSlides;\n\n  if (loopedSlides > slides.length && swiperParams.loopedSlidesLimit) {\n    loopedSlides = slides.length;\n  }\n\n  return loopedSlides;\n}\n\nfunction renderLoop(swiper, slides, swiperParams) {\n  const modifiedSlides = slides.map((child, index) => {\n    return /*#__PURE__*/React.cloneElement(child, {\n      swiper,\n      'data-swiper-slide-index': index\n    });\n  });\n\n  function duplicateSlide(child, index, position) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      key: `${child.key}-duplicate-${index}-${position}`,\n      className: `${child.props.className || ''} ${swiperParams.slideDuplicateClass}`\n    });\n  }\n\n  if (swiperParams.loopFillGroupWithBlank) {\n    const blankSlidesNum = swiperParams.slidesPerGroup - modifiedSlides.length % swiperParams.slidesPerGroup;\n\n    if (blankSlidesNum !== swiperParams.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankSlide = /*#__PURE__*/React.createElement(\"div\", {\n          className: `${swiperParams.slideClass} ${swiperParams.slideBlankClass}`\n        });\n        modifiedSlides.push(blankSlide);\n      }\n    }\n  }\n\n  if (swiperParams.slidesPerView === 'auto' && !swiperParams.loopedSlides) {\n    swiperParams.loopedSlides = modifiedSlides.length;\n  }\n\n  const loopedSlides = calcLoopedSlides(modifiedSlides, swiperParams);\n  const prependSlides = [];\n  const appendSlides = [];\n\n  for (let i = 0; i < loopedSlides; i += 1) {\n    const index = i - Math.floor(i / modifiedSlides.length) * modifiedSlides.length;\n    appendSlides.push(duplicateSlide(modifiedSlides[index], i, 'append'));\n    prependSlides.unshift(duplicateSlide(modifiedSlides[modifiedSlides.length - index - 1], i, 'prepend'));\n  }\n\n  if (swiper) {\n    swiper.loopedSlides = loopedSlides;\n  }\n\n  return [...prependSlides, ...modifiedSlides, ...appendSlides];\n}\n\nexport { calcLoopedSlides, renderLoop };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/swiper/react/loop.js"],"names":["React","Swiper","calcLoopedSlides","slides","swiperParams","slidesPerViewParams","slidesPerView","breakpoints","breakpoint","prototype","getBreakpoint","breakpointOnlyParams","undefined","loopedSlides","Math","ceil","parseFloat","loopAdditionalSlides","length","loopedSlidesLimit","renderLoop","swiper","modifiedSlides","map","child","index","cloneElement","duplicateSlide","position","key","className","props","slideDuplicateClass","loopFillGroupWithBlank","blankSlidesNum","slidesPerGroup","i","blankSlide","createElement","slideClass","slideBlankClass","push","prependSlides","appendSlides","floor","unshift"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,YAAlC,EAAgD;AAC9C,MAAIC,mBAAmB,GAAGD,YAAY,CAACE,aAAvC;;AAEA,MAAIF,YAAY,CAACG,WAAjB,EAA8B;AAC5B,UAAMC,UAAU,GAAGP,MAAM,CAACQ,SAAP,CAAiBC,aAAjB,CAA+BN,YAAY,CAACG,WAA5C,CAAnB;AACA,UAAMI,oBAAoB,GAAGH,UAAU,IAAIJ,YAAY,CAACG,WAA3B,GAAyCH,YAAY,CAACG,WAAb,CAAyBC,UAAzB,CAAzC,GAAgFI,SAA7G;;AAEA,QAAID,oBAAoB,IAAIA,oBAAoB,CAACL,aAAjD,EAAgE;AAC9DD,MAAAA,mBAAmB,GAAGM,oBAAoB,CAACL,aAA3C;AACD;AACF;;AAED,MAAIO,YAAY,GAAGC,IAAI,CAACC,IAAL,CAAUC,UAAU,CAACZ,YAAY,CAACS,YAAb,IAA6BR,mBAA9B,EAAmD,EAAnD,CAApB,CAAnB;AACAQ,EAAAA,YAAY,IAAIT,YAAY,CAACa,oBAA7B;;AAEA,MAAIJ,YAAY,GAAGV,MAAM,CAACe,MAAtB,IAAgCd,YAAY,CAACe,iBAAjD,EAAoE;AAClEN,IAAAA,YAAY,GAAGV,MAAM,CAACe,MAAtB;AACD;;AAED,SAAOL,YAAP;AACD;;AAED,SAASO,UAAT,CAAoBC,MAApB,EAA4BlB,MAA5B,EAAoCC,YAApC,EAAkD;AAChD,QAAMkB,cAAc,GAAGnB,MAAM,CAACoB,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAClD,WAAO,aAAazB,KAAK,CAAC0B,YAAN,CAAmBF,KAAnB,EAA0B;AAC5CH,MAAAA,MAD4C;AAE5C,iCAA2BI;AAFiB,KAA1B,CAApB;AAID,GALsB,CAAvB;;AAOA,WAASE,cAAT,CAAwBH,KAAxB,EAA+BC,KAA/B,EAAsCG,QAAtC,EAAgD;AAC9C,WAAO,aAAa5B,KAAK,CAAC0B,YAAN,CAAmBF,KAAnB,EAA0B;AAC5CK,MAAAA,GAAG,EAAG,GAAEL,KAAK,CAACK,GAAI,cAAaJ,KAAM,IAAGG,QAAS,EADL;AAE5CE,MAAAA,SAAS,EAAG,GAAEN,KAAK,CAACO,KAAN,CAAYD,SAAZ,IAAyB,EAAG,IAAG1B,YAAY,CAAC4B,mBAAoB;AAFlC,KAA1B,CAApB;AAID;;AAED,MAAI5B,YAAY,CAAC6B,sBAAjB,EAAyC;AACvC,UAAMC,cAAc,GAAG9B,YAAY,CAAC+B,cAAb,GAA8Bb,cAAc,CAACJ,MAAf,GAAwBd,YAAY,CAAC+B,cAA1F;;AAEA,QAAID,cAAc,KAAK9B,YAAY,CAAC+B,cAApC,EAAoD;AAClD,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,cAApB,EAAoCE,CAAC,IAAI,CAAzC,EAA4C;AAC1C,cAAMC,UAAU,GAAG,aAAarC,KAAK,CAACsC,aAAN,CAAoB,KAApB,EAA2B;AACzDR,UAAAA,SAAS,EAAG,GAAE1B,YAAY,CAACmC,UAAW,IAAGnC,YAAY,CAACoC,eAAgB;AADb,SAA3B,CAAhC;AAGAlB,QAAAA,cAAc,CAACmB,IAAf,CAAoBJ,UAApB;AACD;AACF;AACF;;AAED,MAAIjC,YAAY,CAACE,aAAb,KAA+B,MAA/B,IAAyC,CAACF,YAAY,CAACS,YAA3D,EAAyE;AACvET,IAAAA,YAAY,CAACS,YAAb,GAA4BS,cAAc,CAACJ,MAA3C;AACD;;AAED,QAAML,YAAY,GAAGX,gBAAgB,CAACoB,cAAD,EAAiBlB,YAAjB,CAArC;AACA,QAAMsC,aAAa,GAAG,EAAtB;AACA,QAAMC,YAAY,GAAG,EAArB;;AAEA,OAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvB,YAApB,EAAkCuB,CAAC,IAAI,CAAvC,EAA0C;AACxC,UAAMX,KAAK,GAAGW,CAAC,GAAGtB,IAAI,CAAC8B,KAAL,CAAWR,CAAC,GAAGd,cAAc,CAACJ,MAA9B,IAAwCI,cAAc,CAACJ,MAAzE;AACAyB,IAAAA,YAAY,CAACF,IAAb,CAAkBd,cAAc,CAACL,cAAc,CAACG,KAAD,CAAf,EAAwBW,CAAxB,EAA2B,QAA3B,CAAhC;AACAM,IAAAA,aAAa,CAACG,OAAd,CAAsBlB,cAAc,CAACL,cAAc,CAACA,cAAc,CAACJ,MAAf,GAAwBO,KAAxB,GAAgC,CAAjC,CAAf,EAAoDW,CAApD,EAAuD,SAAvD,CAApC;AACD;;AAED,MAAIf,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACR,YAAP,GAAsBA,YAAtB;AACD;;AAED,SAAO,CAAC,GAAG6B,aAAJ,EAAmB,GAAGpB,cAAtB,EAAsC,GAAGqB,YAAzC,CAAP;AACD;;AAED,SAASzC,gBAAT,EAA2BkB,UAA3B","sourcesContent":["import React from 'react';\nimport Swiper from 'swiper';\n\nfunction calcLoopedSlides(slides, swiperParams) {\n  let slidesPerViewParams = swiperParams.slidesPerView;\n\n  if (swiperParams.breakpoints) {\n    const breakpoint = Swiper.prototype.getBreakpoint(swiperParams.breakpoints);\n    const breakpointOnlyParams = breakpoint in swiperParams.breakpoints ? swiperParams.breakpoints[breakpoint] : undefined;\n\n    if (breakpointOnlyParams && breakpointOnlyParams.slidesPerView) {\n      slidesPerViewParams = breakpointOnlyParams.slidesPerView;\n    }\n  }\n\n  let loopedSlides = Math.ceil(parseFloat(swiperParams.loopedSlides || slidesPerViewParams, 10));\n  loopedSlides += swiperParams.loopAdditionalSlides;\n\n  if (loopedSlides > slides.length && swiperParams.loopedSlidesLimit) {\n    loopedSlides = slides.length;\n  }\n\n  return loopedSlides;\n}\n\nfunction renderLoop(swiper, slides, swiperParams) {\n  const modifiedSlides = slides.map((child, index) => {\n    return /*#__PURE__*/React.cloneElement(child, {\n      swiper,\n      'data-swiper-slide-index': index\n    });\n  });\n\n  function duplicateSlide(child, index, position) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      key: `${child.key}-duplicate-${index}-${position}`,\n      className: `${child.props.className || ''} ${swiperParams.slideDuplicateClass}`\n    });\n  }\n\n  if (swiperParams.loopFillGroupWithBlank) {\n    const blankSlidesNum = swiperParams.slidesPerGroup - modifiedSlides.length % swiperParams.slidesPerGroup;\n\n    if (blankSlidesNum !== swiperParams.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankSlide = /*#__PURE__*/React.createElement(\"div\", {\n          className: `${swiperParams.slideClass} ${swiperParams.slideBlankClass}`\n        });\n        modifiedSlides.push(blankSlide);\n      }\n    }\n  }\n\n  if (swiperParams.slidesPerView === 'auto' && !swiperParams.loopedSlides) {\n    swiperParams.loopedSlides = modifiedSlides.length;\n  }\n\n  const loopedSlides = calcLoopedSlides(modifiedSlides, swiperParams);\n  const prependSlides = [];\n  const appendSlides = [];\n\n  for (let i = 0; i < loopedSlides; i += 1) {\n    const index = i - Math.floor(i / modifiedSlides.length) * modifiedSlides.length;\n    appendSlides.push(duplicateSlide(modifiedSlides[index], i, 'append'));\n    prependSlides.unshift(duplicateSlide(modifiedSlides[modifiedSlides.length - index - 1], i, 'prepend'));\n  }\n\n  if (swiper) {\n    swiper.loopedSlides = loopedSlides;\n  }\n\n  return [...prependSlides, ...modifiedSlides, ...appendSlides];\n}\n\nexport { calcLoopedSlides, renderLoop };"]},"metadata":{},"sourceType":"module"}