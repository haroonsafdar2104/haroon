{"ast":null,"code":"function calcInset(element, container) {\n  var inset = {\n    x: 0,\n    y: 0\n  };\n  var current = element;\n\n  while (current && current !== container) {\n    if (current instanceof HTMLElement) {\n      inset.x += current.offsetLeft;\n      inset.y += current.offsetTop;\n      current = current.offsetParent;\n    } else if (current instanceof SVGGraphicsElement && \"getBBox\" in current) {\n      var _current$getBBox = current.getBBox(),\n          top = _current$getBBox.top,\n          left = _current$getBBox.left;\n\n      inset.x += left;\n      inset.y += top;\n      /**\n       * Assign the next parent element as the <svg /> tag.\n       */\n\n      while (current && current.tagName !== \"svg\") {\n        current = current.parentNode;\n      }\n    }\n  }\n\n  return inset;\n}\n\nexport { calcInset };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/@motionone/dom/dist/gestures/scroll/offsets/inset.es.js"],"names":["calcInset","element","container","inset","x","y","current","HTMLElement","offsetLeft","offsetTop","offsetParent","SVGGraphicsElement","getBBox","top","left","tagName","parentNode"],"mappings":"AAAA,SAASA,SAAT,CAAmBC,OAAnB,EAA4BC,SAA5B,EAAuC;AACnC,MAAIC,KAAK,GAAG;AAAEC,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAZ;AACA,MAAIC,OAAO,GAAGL,OAAd;;AACA,SAAOK,OAAO,IAAIA,OAAO,KAAKJ,SAA9B,EAAyC;AACrC,QAAII,OAAO,YAAYC,WAAvB,EAAoC;AAChCJ,MAAAA,KAAK,CAACC,CAAN,IAAWE,OAAO,CAACE,UAAnB;AACAL,MAAAA,KAAK,CAACE,CAAN,IAAWC,OAAO,CAACG,SAAnB;AACAH,MAAAA,OAAO,GAAGA,OAAO,CAACI,YAAlB;AACH,KAJD,MAKK,IAAIJ,OAAO,YAAYK,kBAAnB,IAAyC,aAAaL,OAA1D,EAAmE;AACpE,6BAAsBA,OAAO,CAACM,OAAR,EAAtB;AAAA,UAAQC,GAAR,oBAAQA,GAAR;AAAA,UAAaC,IAAb,oBAAaA,IAAb;;AACAX,MAAAA,KAAK,CAACC,CAAN,IAAWU,IAAX;AACAX,MAAAA,KAAK,CAACE,CAAN,IAAWQ,GAAX;AACA;AACZ;AACA;;AACY,aAAOP,OAAO,IAAIA,OAAO,CAACS,OAAR,KAAoB,KAAtC,EAA6C;AACzCT,QAAAA,OAAO,GAAGA,OAAO,CAACU,UAAlB;AACH;AACJ;AACJ;;AACD,SAAOb,KAAP;AACH;;AAED,SAASH,SAAT","sourcesContent":["function calcInset(element, container) {\n    let inset = { x: 0, y: 0 };\n    let current = element;\n    while (current && current !== container) {\n        if (current instanceof HTMLElement) {\n            inset.x += current.offsetLeft;\n            inset.y += current.offsetTop;\n            current = current.offsetParent;\n        }\n        else if (current instanceof SVGGraphicsElement && \"getBBox\" in current) {\n            const { top, left } = current.getBBox();\n            inset.x += left;\n            inset.y += top;\n            /**\n             * Assign the next parent element as the <svg /> tag.\n             */\n            while (current && current.tagName !== \"svg\") {\n                current = current.parentNode;\n            }\n        }\n    }\n    return inset;\n}\n\nexport { calcInset };\n"]},"metadata":{},"sourceType":"module"}