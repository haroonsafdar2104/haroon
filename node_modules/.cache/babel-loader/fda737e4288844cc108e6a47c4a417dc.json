{"ast":null,"code":"import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\n\nfunction useFocusGesture(_ref) {\n  let {\n    whileFocus,\n    visualElement\n  } = _ref;\n  const {\n    animationState\n  } = visualElement;\n\n  const onFocus = () => {\n    animationState && animationState.setActive(AnimationType.Focus, true);\n  };\n\n  const onBlur = () => {\n    animationState && animationState.setActive(AnimationType.Focus, false);\n  };\n\n  useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n  useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs"],"names":["AnimationType","useDomEvent","useFocusGesture","whileFocus","visualElement","animationState","onFocus","setActive","Focus","onBlur","undefined"],"mappings":"AAAA,SAASA,aAAT,QAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,OAAwD;AAAA,MAA/B;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAA+B;AACpD,QAAM;AAAEC,IAAAA;AAAF,MAAqBD,aAA3B;;AACA,QAAME,OAAO,GAAG,MAAM;AAClBD,IAAAA,cAAc,IAAIA,cAAc,CAACE,SAAf,CAAyBP,aAAa,CAACQ,KAAvC,EAA8C,IAA9C,CAAlB;AACH,GAFD;;AAGA,QAAMC,MAAM,GAAG,MAAM;AACjBJ,IAAAA,cAAc,IAAIA,cAAc,CAACE,SAAf,CAAyBP,aAAa,CAACQ,KAAvC,EAA8C,KAA9C,CAAlB;AACH,GAFD;;AAGAP,EAAAA,WAAW,CAACG,aAAD,EAAgB,OAAhB,EAAyBD,UAAU,GAAGG,OAAH,GAAaI,SAAhD,CAAX;AACAT,EAAAA,WAAW,CAACG,aAAD,EAAgB,MAAhB,EAAwBD,UAAU,GAAGM,MAAH,GAAYC,SAA9C,CAAX;AACH;;AAED,SAASR,eAAT","sourcesContent":["import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n"]},"metadata":{},"sourceType":"module"}