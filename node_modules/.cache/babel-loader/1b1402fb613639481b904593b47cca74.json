{"ast":null,"code":"export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    $wrapperEl,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer) {\n    swiper.update();\n  }\n\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","map":{"version":3,"sources":["D:/Web Data/Personal-Website/client/node_modules/swiper/modules/manipulation/methods/removeSlide.js"],"names":["removeSlide","slidesIndexes","swiper","params","$wrapperEl","activeIndex","activeIndexBuffer","loop","loopedSlides","loopDestroy","slides","children","slideClass","newActiveIndex","indexToRemove","i","length","eq","remove","Math","max","loopCreate","observer","update","slideTo"],"mappings":"AAAA,eAAe,SAASA,WAAT,CAAqBC,aAArB,EAAoC;AACjD,QAAMC,MAAM,GAAG,IAAf;AACA,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA;AAHI,MAIFH,MAJJ;AAKA,MAAII,iBAAiB,GAAGD,WAAxB;;AAEA,MAAIF,MAAM,CAACI,IAAX,EAAiB;AACfD,IAAAA,iBAAiB,IAAIJ,MAAM,CAACM,YAA5B;AACAN,IAAAA,MAAM,CAACO,WAAP;AACAP,IAAAA,MAAM,CAACQ,MAAP,GAAgBN,UAAU,CAACO,QAAX,CAAqB,IAAGR,MAAM,CAACS,UAAW,EAA1C,CAAhB;AACD;;AAED,MAAIC,cAAc,GAAGP,iBAArB;AACA,MAAIQ,aAAJ;;AAEA,MAAI,OAAOb,aAAP,KAAyB,QAAzB,IAAqC,YAAYA,aAArD,EAAoE;AAClE,SAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,aAAa,CAACe,MAAlC,EAA0CD,CAAC,IAAI,CAA/C,EAAkD;AAChDD,MAAAA,aAAa,GAAGb,aAAa,CAACc,CAAD,CAA7B;AACA,UAAIb,MAAM,CAACQ,MAAP,CAAcI,aAAd,CAAJ,EAAkCZ,MAAM,CAACQ,MAAP,CAAcO,EAAd,CAAiBH,aAAjB,EAAgCI,MAAhC;AAClC,UAAIJ,aAAa,GAAGD,cAApB,EAAoCA,cAAc,IAAI,CAAlB;AACrC;;AAEDA,IAAAA,cAAc,GAAGM,IAAI,CAACC,GAAL,CAASP,cAAT,EAAyB,CAAzB,CAAjB;AACD,GARD,MAQO;AACLC,IAAAA,aAAa,GAAGb,aAAhB;AACA,QAAIC,MAAM,CAACQ,MAAP,CAAcI,aAAd,CAAJ,EAAkCZ,MAAM,CAACQ,MAAP,CAAcO,EAAd,CAAiBH,aAAjB,EAAgCI,MAAhC;AAClC,QAAIJ,aAAa,GAAGD,cAApB,EAAoCA,cAAc,IAAI,CAAlB;AACpCA,IAAAA,cAAc,GAAGM,IAAI,CAACC,GAAL,CAASP,cAAT,EAAyB,CAAzB,CAAjB;AACD;;AAED,MAAIV,MAAM,CAACI,IAAX,EAAiB;AACfL,IAAAA,MAAM,CAACmB,UAAP;AACD;;AAED,MAAI,CAAClB,MAAM,CAACmB,QAAZ,EAAsB;AACpBpB,IAAAA,MAAM,CAACqB,MAAP;AACD;;AAED,MAAIpB,MAAM,CAACI,IAAX,EAAiB;AACfL,IAAAA,MAAM,CAACsB,OAAP,CAAeX,cAAc,GAAGX,MAAM,CAACM,YAAvC,EAAqD,CAArD,EAAwD,KAAxD;AACD,GAFD,MAEO;AACLN,IAAAA,MAAM,CAACsB,OAAP,CAAeX,cAAf,EAA+B,CAA/B,EAAkC,KAAlC;AACD;AACF","sourcesContent":["export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    $wrapperEl,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer) {\n    swiper.update();\n  }\n\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}"]},"metadata":{},"sourceType":"module"}